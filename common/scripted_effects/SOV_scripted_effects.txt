#####
##### PROPAGANDA SYSTEM #####
#####
SOV_achievement_propaganda_counter_effect = {
	if = {
		limit = {
			check_variable = { var = propaganda_counter value = 1 compare = less_than }
		}
		set_variable = { var = propaganda_counter value = 1 } #setup variable
	}
	else = {
		add_to_variable = {
			propaganda_counter = 1
		}
	}
}
SOV_pick_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index }
			}
			set_variable = { SOV_poster_left_icon_frame = SOV_new_propaganda_campaign }
			#Ageing posters
			set_variable = { SOV_propaganda_left_poster_to_age = SOV_poster_left_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = NSB_soviet_propaganda_capmaign_events.101 days = SOV_default_propaganda_campaign_old_days }
				#set_country_flag = { flag = SOV_propaganda_left_days_remaining_flag days = SOV_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = SOV_propaganda_left_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = SOV_propaganda_left_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index }
			}
			set_variable = { SOV_poster_center_icon_frame = SOV_new_propaganda_campaign }
			#Ageing posters
			set_variable = { SOV_propaganda_center_poster_to_age = SOV_poster_center_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = NSB_soviet_propaganda_capmaign_events.102 days = SOV_default_propaganda_campaign_old_days }
				#set_country_flag = { flag = SOV_propaganda_center_days_remaining_flag days = SOV_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = SOV_propaganda_center_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = SOV_propaganda_center_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index }
			}
			set_variable = { SOV_poster_right_icon_frame = SOV_new_propaganda_campaign }
			#Ageing posters
			set_variable = { SOV_propaganda_right_poster_to_age = SOV_poster_right_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = NSB_soviet_propaganda_capmaign_events.103 days = SOV_default_propaganda_campaign_old_days }
				#set_country_flag = { flag = SOV_propaganda_right_days_remaining_flag days = SOV_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = SOV_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = SOV_propaganda_right_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = SOV_propaganda_right_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		set_variable = { SOV_new_propaganda_campaign = 0 } # Reset var
		add_to_variable = { SOV_propaganda_campaigns_taken = 1 } #Update propaganda campaigns counter
	}
}

SOV_reset_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { SOV_poster_left_icon_frame = SOV_propaganda_campaign_to_remove }
			}
			set_variable = { SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = SOV_propaganda_left_poster_to_age
			clr_country_flag = SOV_propaganda_left_slot_is_old_flag
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_center_icon_frame = SOV_propaganda_campaign_to_remove }
			}
			set_variable = { SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = SOV_propaganda_center_poster_to_age
			clr_country_flag = SOV_propaganda_center_slot_is_old_flag
		}
		else_if = { #This could be turned into an else, but leaving it like this to hopefully make it easier to see
			limit = {
				check_variable = { SOV_poster_right_icon_frame = SOV_propaganda_campaign_to_remove }
			}
			set_variable = { SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = SOV_propaganda_right_poster_to_age
			clr_country_flag = SOV_propaganda_right_slot_is_old_flag
		}
		set_variable = { SOV_propaganda_campaign_to_remove = 0 } # Reset var
	}
}

SOV_unlock_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { SOV_poster_left_icon_frame = SOV_propaganda_locked_slot_index }
			}
			set_variable = { SOV_poster_left_icon_frame = SOV_propaganda_empty_slot_index }
		}
		else_if = {
			limit = {
				check_variable = { SOV_poster_center_icon_frame = SOV_propaganda_locked_slot_index }
			}
			set_variable = { SOV_poster_center_icon_frame = SOV_propaganda_empty_slot_index }
		}
		else = {
			set_variable = { SOV_poster_right_icon_frame = SOV_propaganda_empty_slot_index }
		}
	}
}

SOV_increase_propaganda_campaign_cost_effect = {
	multiply_variable = { SOV_propaganda_cost = SOV_propaganda_cost_increase } #Using generic var SOV_propaganda_cost so that we only need to change this operation to tweak all propagandas' cost escalation
}


#####
##### PARANOIA SYSTEM #####
#####

SOV_paranoia_very_low_increase_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_very_low_increase_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_very_low_increase }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_low_increase_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_low_increase_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_low_increase }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_medium_increase_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_medium_increase_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_medium_increase }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_high_increase_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_high_increase_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_high_increase }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_very_high_increase_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_very_high_increase_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_very_high_increase }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_low_decrease_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_low_decrease_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_low_decrease }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_medium_decrease_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_medium_decrease_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_medium_decrease }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_high_decrease_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_high_decrease_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_high_decrease }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_very_high_decrease_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		custom_effect_tooltip = SOV_paranoia_very_high_decrease_effect_tt
		add_to_variable = { SOV_paranoia = SOV_paranoia_very_high_decrease }
		SOV_paranoia_clamp_and_update_ui_effect = yes
	}
}

SOV_paranoia_increase_based_on_unit_leader_level_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		#custom_effect_tooltip = SOV_paranoia_increase_based_on_unit_leader_level_effect_tt
		add_to_variable = { SOV_paranoia = SOV_unit_leader_level }
		SOV_paranoia_clamp_and_update_ui_effect = yes
		clear_variable = SOV_unit_leader_level
	}
}

SOV_paranoia_decrease_based_on_unit_leader_level_effect = {
	if = {
		limit = {
			has_country_flag = SOV_paranoia_system_active_flag
		}
		#custom_effect_tooltip = SOV_paranoia_decrease_based_on_unit_leader_level_effect_tt
		subtract_from_variable = { SOV_paranoia = SOV_unit_leader_level }
		SOV_paranoia_clamp_and_update_ui_effect = yes
		clear_variable = SOV_unit_leader_level
	}
}

SOV_paranoia_modifier_increase_effect = { #Called on_weekly to apply the modifier
	custom_effect_tooltip = SOV_paranoia_modifier_increase_effect_tt
	set_temp_variable = { SOV_paranoia_total_weekly_modifier_increase = SOV_paranoia_modifier_increase } #Get default weekly modifier increase value
	multiply_temp_variable = { SOV_paranoia_total_weekly_modifier_increase = SOV_paranoia_weekly_modifiers_amount } #Multiply default weekly modifier increase by the number of active weekly modifiers
	add_to_variable = { SOV_paranoia = SOV_paranoia_total_weekly_modifier_increase } #Apply the result and add to Paranoia
	SOV_paranoia_clamp_and_update_ui_effect = yes
}

SOV_paranoia_modifier_update_gui_tooltip = { #Only updates the tooltip in the decision GUI
	ROOT = { set_variable = { SOV_paranoia_weekly_modifier_ui = SOV_paranoia_modifier_increase } } #Get default weekly modifier increase value
	ROOT = { multiply_variable = { SOV_paranoia_weekly_modifier_ui = SOV_paranoia_weekly_modifiers_amount } } #Multiply default weekly modifier increase by the number of active weekly modifiers
}

SOV_paranoia_clamp_and_update_ui_effect = {
	clamp_variable = {
		var = SOV_paranoia
		min = 0
		max = 100
	}
	SOV_update_ui_effect = yes
}

SOV_paranoia_increase_purge_counter_regular = {
	add_to_variable = { SOV_regular_purge_counter = 1 }
	add_to_variable = { SOV_total_purge_counter = 1 }
}

SOV_paranoia_increase_purge_counter_great = {
	add_to_variable = { SOV_great_purge_counter = 1 }
	add_to_variable = { SOV_total_purge_counter = 1 }
}

SOV_initiate_paranoia_effect = { #PARANOIA SYSTEM STARTS, GOOD LUCK COMRADE
	set_country_flag = SOV_paranoia_system_active_flag #Uh oh...

	#Stalin gets paranoid
	add_country_leader_trait = stalin_political_paranoia

	#NKVD chiefs will make Political Paranoia worse
	remove_trait = {
		character = SOV_genrikh_yagoda
		slot = political_advisor
		trait = head_of_the_nkvd_yagoda_initial
	}
	add_trait = {
		character = SOV_genrikh_yagoda
		slot = political_advisor
		trait = head_of_the_nkvd_yagoda
	}

	remove_trait = {
		character = SOV_nikolay_yezhov
		slot = political_advisor
		trait = head_of_the_nkvd_yezhov_initial
	}
	add_trait = {
		character = SOV_nikolay_yezhov
		slot = political_advisor
		trait = head_of_the_nkvd_yezhov
	}

	remove_trait = {
		character = SOV_lavrenty_beriya
		slot = political_advisor
		trait = head_of_the_nkvd_beriya_initial
	}
	add_trait = {
		character = SOV_lavrenty_beriya
		slot = political_advisor
		trait = head_of_the_nkvd_beriya
	}
}

SOV_remove_paranoia_effect = { # NO MORE PARANOIA, COMRADES
	custom_effect_tooltip = SOV_stalins_cult_of_personality_tt
	set_variable = { SOV_paranoia = 0 }
	set_variable = { SOV_paranoia_modifier_increase = 0 }
	SOV_paranoia_clamp_and_update_ui_effect = yes
	clr_country_flag = SOV_paranoia_system_active_flag
	clr_country_flag = SOV_paranoia_modifier_active_flag
	if = {
		limit = {
			has_country_leader_with_trait = stalin_political_paranoia_advanced
		}
		remove_country_leader_trait = stalin_political_paranoia_advanced
	}
	else_if = {
		limit = {
			has_country_leader_with_trait = stalin_political_paranoia
		}
		remove_country_leader_trait = stalin_political_paranoia
	}

	#No more paranoia from NKVD chiefs
	hidden_effect = {
		if = {
			limit = {
				has_character = SOV_genrikh_yagoda
			}
			if = { #If active, keep him active after changing his role
				limit = {
					has_idea = SOV_genrikh_yagoda
				}
				remove_advisor_role = {
					character = "SOV_genrikh_yagoda"
					slot = political_advisor
				}
				add_advisor_role = {
					character = "SOV_genrikh_yagoda"
					advisor = {
						slot = political_advisor
						idea_token = SOV_genrikh_yagoda
						allowed = {
							original_tag = SOV
						}
						visible = {
							NOT = {
								has_character_flag = SOV_character_purged_flag
							}
						}
						traits = {
							head_of_the_nkvd_yagoda_no_paranoia
						}
					}
					activate = yes
				}
			}
			else = { #If not active, just change his role
				remove_advisor_role = {
					character = "SOV_genrikh_yagoda"
					slot = political_advisor
				}
				add_advisor_role = {
					character = "SOV_genrikh_yagoda"
					advisor = {
						slot = political_advisor
						idea_token = SOV_genrikh_yagoda
						allowed = {
							original_tag = SOV
						}
						visible = {
							NOT = {
								has_character_flag = SOV_character_purged_flag
							}
						}
						traits = {
							head_of_the_nkvd_yagoda_no_paranoia
						}
					}
				}
			}
		}

		if = {
			limit = {
				has_character = SOV_nikolay_yezhov
			}
			if = { #If active, keep him active after changing his role
				limit = {
					has_idea = SOV_nikolay_yezhov
				}
				remove_advisor_role = {
					character = "SOV_nikolay_yezhov"
					slot = political_advisor
				}
				add_advisor_role = {
					character = "SOV_nikolay_yezhov"
					advisor = {
						slot = political_advisor
						idea_token = SOV_nikolay_yezhov
						allowed = {
							original_tag = SOV
						}
						visible = {
							NOT = {
								has_character_flag = SOV_character_purged_flag
							}
						}
						traits = {
							head_of_the_nkvd_yezhov_no_paranoia
						}
					}
					activate = yes
				}
			}
			else = { #If not active, just change his role
				remove_advisor_role = {
					character = "SOV_nikolay_yezhov"
					slot = political_advisor
				}
				add_advisor_role = {
					character = "SOV_nikolay_yezhov"
					advisor = {
						slot = political_advisor
						idea_token = SOV_nikolay_yezhov
						allowed = {
							original_tag = SOV
						}
						visible = {
							NOT = {
								has_character_flag = SOV_character_purged_flag
							}
						}
						traits = {
							head_of_the_nkvd_yezhov_no_paranoia
						}
					}
				}
			}
		}

		if = {
			limit = {
				has_character = SOV_lavrenty_beriya
			}
			if = { #If active, keep him active after changing his role
				limit = {
					has_idea = SOV_lavrenty_beriya
				}
				remove_advisor_role = {
					character = "SOV_lavrenty_beriya"
					slot = political_advisor
				}
				add_advisor_role = {
					character = "SOV_lavrenty_beriya"
					advisor = {
						slot = political_advisor
						idea_token = SOV_lavrenty_beriya
						allowed = {
							original_tag = SOV
						}
						visible = {
							NOT = {
								has_character_flag = SOV_character_purged_flag
							}
						}
						traits = {
							head_of_the_nkvd_beriya_no_paranoia
						}
					}
					activate = yes
				}
			}
			else = { #If not active, just change his role
				remove_advisor_role = {
					character = "SOV_lavrenty_beriya"
					slot = political_advisor
				}
				add_advisor_role = {
					character = "SOV_lavrenty_beriya"
					advisor = {
						slot = political_advisor
						idea_token = SOV_lavrenty_beriya
						allowed = {
							original_tag = SOV
						}
						visible = {
							NOT = {
								has_character_flag = SOV_character_purged_flag
							}
						}
						traits = {
							head_of_the_nkvd_beriya_no_paranoia
						}
					}
				}
			}
		}
	}
}

#UI
SOV_update_ui_effect = {
	if = {
		limit = {
			check_variable = { SOV_paranoia = 0 }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 1 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 5 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 2 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 10 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 3 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 15 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 4 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 20 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 5 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 25 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 6 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 30 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 7 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 35 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 8 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 40 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 9 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 45 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 10 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 50 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 11 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 55 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 12 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 60 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 13 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 65 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 14 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 70 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 15 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 75 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 16 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 80 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 17 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 85 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 18 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 90 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 19 }
	}
	else_if = {
		limit = {
			check_variable = { SOV_paranoia = 95 compare = less_than_or_equals }
		}
		set_variable = { SOV_paranoia_main_paranoiameter = 20 }
	}
	else = { # paranoia > 95
		set_variable = { SOV_paranoia_main_paranoiameter = 21 }
	}
}

#EFFECTS FROM PURGES
SOV_paranoia_daunt_generals_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 5 compare = less_than }
			any_army_leader = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_army }
			}
		}
		random_army_leader = {
			limit = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_army }
			}
			add_unit_leader_trait = trait_SOV_cowed_by_stalin_army
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = SOV_daunt_generals_tt
}

SOV_paranoia_daunt_generals_minor_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 2 compare = less_than }
			any_army_leader = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_army }
			}
		}
		random_army_leader = {
			limit = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_army }
			}
			add_unit_leader_trait = trait_SOV_cowed_by_stalin_army
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = SOV_daunt_generals_minor_tt
}

SOV_paranoia_daunt_admirals_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 5 compare = less_than }
			any_navy_leader = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_navy }
			}
		}
		random_navy_leader = {
			limit = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_navy }
			}
			add_unit_leader_trait = trait_SOV_cowed_by_stalin_navy
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = SOV_daunt_admirals_tt
}

SOV_paranoia_daunt_admirals_minor_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 2 compare = less_than }
			any_navy_leader = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_navy }
			}
		}
		random_navy_leader = {
			limit = {
				NOT = { has_character_flag = SOV_targeted_for_purge_flag }
				NOT = { has_trait = trait_SOV_cowed_by_stalin_navy }
			}
			add_unit_leader_trait = trait_SOV_cowed_by_stalin_navy
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = SOV_daunt_admirals_minor_tt
}


SOV_purge_character_effect = { #Expected to be called in the character scope
	set_character_flag = SOV_character_purged_flag
	PREV = { retire_character = PREV }
}

SOV_paranoia_update_portraits_ui = { #Expected to be called in the country scope
	if = {
		limit = {
			NOT = { has_character = SOV_grigory_zinovyev }
			check_variable = { SOV.SOV_paranoia_photo_zinovyev = 8 compare = not_equals }
		}
		set_variable = { SOV.SOV_paranoia_photo_zinovyev = 8 }
		set_country_flag = SOV_added_purged_portrait_flag
	}
	if = {
		limit = {
			has_completed_focus = SOV_the_anti_soviet_trotskyist_center
			check_variable = { SOV.SOV_paranoia_photo_radek = 9 compare = not_equals }
		}
		set_variable = { SOV.SOV_paranoia_photo_radek = 9 }
		set_country_flag = SOV_added_purged_portrait_flag
	}
	if = {
		limit = {
			has_completed_focus = SOV_the_anti_soviet_trotskyist_center
			check_variable = { SOV.SOV_paranoia_photo_bukharin = 10 compare = not_equals }
		}
		set_variable = { SOV.SOV_paranoia_photo_bukharin = 10 }
		set_country_flag = SOV_added_purged_portrait_flag
	}
	if = {
		limit = {
			has_completed_focus = SOV_behead_the_snake
			check_variable = { SOV.SOV_paranoia_photo_trotsky = 11 compare = not_equals }
		}
		set_variable = { SOV.SOV_paranoia_photo_trotsky = 11 }
		set_country_flag = SOV_added_purged_portrait_flag
	}
	if = {
		limit = {
			NOT = { has_character = SOV_mikhail_tukhachevsky }
			check_variable = { SOV.SOV_paranoia_photo_tukhachevsky = 12 compare = not_equals }
		}
		set_variable = { SOV.SOV_paranoia_photo_tukhachevsky = 12 }
		set_country_flag = SOV_added_purged_portrait_flag
	}
	if = { #Generic
		limit = {
			NOT = { has_country_flag = SOV_added_purged_portrait_flag } #IMPORTANT: This flag needs to be cleared after the purge character effect in eevery event purging characters
		}
		set_temp_variable = { SOV_generic_portrait_frame = SOV_paranoia_portrait_index }
		if = { #There are 6 portraits and 12 slots, so second round of generic portraits
			limit = {
				check_variable = { SOV_paranoia_portrait_index = 6 compare = greater_than }
			}
			subtract_from_temp_variable = { SOV_generic_portrait_frame = 6 }
		}
		add_to_temp_variable = { SOV_generic_portrait_frame = 1 }

		add_to_array = {
			array = SOV_paranoia_generic_portraits_array
			value = SOV_generic_portrait_frame
			index = SOV_paranoia_portrait_index
		}
		
		add_to_variable = { SOV_paranoia_portrait_index = 1 }
	}
	clr_country_flag = SOV_added_purged_portrait_flag
}

SOV_clean_purge_targets_effect = {
	hidden_effect = {
		every_character = {
			limit = {
				has_character_flag = SOV_targeted_for_purge_flag
			}
			clr_character_flag = SOV_targeted_for_purge_flag
		}
	}
}

SOV_clear_unavoidable_purge_flags_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_country_flag = SOV_purge_event_unavoidable_flag
			}
			clr_country_flag = SOV_purge_event_unavoidable_flag
		}
	}
}

SOV_add_random_character_to_purge_targets_effect = {
	if = {
		limit = {
			check_variable = { SOV_specific_random_purge_targets_override = 0 compare = less_than }
		}
		add_to_variable = { SOV_specific_random_purge_targets_override = 2 } #Var starts at -1 so it's necessary to take it into account
	}
	else = {
		add_to_variable = { SOV_specific_random_purge_targets_override = 1 }
	}
}

SOV_no_random_characters_for_this_purge_effect = {
	set_variable = { SOV_specific_random_purge_targets_override = 0 }
}

SOV_reset_specific_random_target_override_effect = {
	set_variable = { SOV_specific_random_purge_targets_override = -1 }
}


###############
### PHASE 1 ###
###############
# Check for a randomly triggered purge, and set the appropriate severity (regular purge/great purge) [RANDOM PURGE & SIZE]
SOV_check_for_a_new_purge_effect = { #Useless now. Leaving it just in case
	if = { # REGULAR PURGE
		limit = {
			SOV_paranoia_is_medium_level = yes
		}
		SOV_manage_a_regular_purge_effect = yes
	}
	else_if = { # GREAT PURGE
		limit = {
			SOV_paranoia_is_high_level = yes
		}
		SOV_manage_a_great_purge_effect = yes
	}
}


###############
### PHASE 2 ###
###############
#Set the Area to be purged (admin, army, navy, airforce) [AREA]

# REGULAR PURGE
SOV_manage_a_regular_purge_effect = { # Phase 2: Set the Area to be purged (admin, army, navy, airforce), then set the actual targets (people), then trigger event (Phase 3)
	# Randomly choose an area to purge
	random_list = {
		25 = { # ADMINISTRATION
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { SOV_last_regular_purge_area = 1 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = SOV_potential_target_flag
				}
			}
			modifier = { #Yagoda is in the NKVD -> He shall be purged
				factor = 1.5
				has_idea = SOV_genrikh_yagoda
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_character = {
						is_character_slot = political_advisor
						SOV_character_can_be_purged = yes
					}
				}
				has_idea = SOV_understaffed_bureaucracy
				has_idea = SOV_lavrenty_beriya
			}
			SOV_pick_regular_purge_administration_type_effect = yes
		}
		25 = { # ARMY
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { SOV_last_regular_purge_area = 2 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					has_character_flag = SOV_potential_target_flag
					OR = {
						is_army_leader = yes
						has_army_ledger = yes
					}
				}
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_army_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
				has_idea = SOV_anti_soviet_military_thinking_banned_army
				has_idea = SOV_training_activities_curtailed
			}
			SOV_pick_regular_purge_army_type_effect = yes
		}
		25 = { # NAVY
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { SOV_last_regular_purge_area = 3 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_navy_leader = {
					has_character_flag = SOV_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_navy_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
				has_idea = SOV_anti_soviet_military_thinking_banned_navy
				has_idea = SOV_shipyard_staff_purged
			}
			SOV_pick_regular_purge_navy_type_effect = yes
		}
		25 = { # AIRFORCE
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { SOV_last_regular_purge_area = 4 }
			}
			modifier = { #Someone is a potential targets
				factor = 2
				any_character = {
					has_air_ledger = yes
					has_character_flag = SOV_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				has_idea = SOV_anti_soviet_military_thinking_banned_airforce
				has_idea = SOV_ground_based_training
			}
			SOV_pick_regular_purge_airforce_type_effect = yes
		}
	}
}

# GREAT PURGE
SOV_manage_a_great_purge_effect = {
	# Randomly choose an area to purge
	random_list = {
		25 = { # ADMINISTRATION
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { SOV_last_great_purge_area = 1 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = SOV_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_character = {
						is_character_slot = political_advisor
						NOT = { #NKVDs have their own purge
							is_character = SOV_genrikh_yagoda
							is_character = SOV_nikolay_yezhov
							is_character = SOV_lavrenty_beriya
						}
						SOV_character_can_be_purged = yes
					}
				}
			}
			SOV_pick_great_purge_administration_type_effect = yes
		}
		25 = { # ARMY
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { SOV_last_great_purge_area = 2 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					has_character_flag = SOV_potential_target_flag
					OR = {
						is_army_leader = yes
						has_army_ledger	= yes
					}
				}
			}
			SOV_pick_great_purge_army_type_effect = yes
		}
		25 = { # NAVY
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { SOV_last_great_purge_area = 3 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_navy_leader = yes
						has_navy_ledger = yes
					}
					has_character_flag = SOV_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				has_idea = SOV_purged_junior_navy_officers_3
				NOT = {
					any_navy_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
			}
			SOV_pick_great_purge_navy_type_effect = yes
		}
		25 = { # AIRFORCE
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { SOV_last_great_purge_area = 4 }
			}
			modifier = { #Someone is a potential targets
				factor = 2
				OR = {
					NOT = { has_country_flag = SOV_purged_airforce_chiefs_flag } #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
					any_character = {
						has_air_ledger = yes
						has_character_flag = SOV_potential_target_flag
					}
				}
			}
			modifier = { #We have closed a lot of designers man
				factor = 0.5
				has_country_flag = SOV_purged_airforce_chiefs_flag  #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
				NOT = {
					any_character = {
						has_air_ledger = yes
						has_character_flag = SOV_potential_target_flag
					}
				}
				count_triggers = {
					amount = 2
					has_country_flag = SOV_mig_design_bureau_dissolved_flag
					has_country_flag = SOV_ilyushin_design_bureau_dissolved_flag
					has_country_flag = SOV_tupolev_design_bureau_dissolved_flag
					has_country_flag = SOV_yakovlev_design_bureau_dissolved_flag
				}
			}

			modifier = { #There are no purges available
				factor = 0
				has_country_flag = SOV_purged_airforce_chiefs_flag  #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
				NOT = {
					any_character = {
						has_air_ledger = yes
						has_character_flag = SOV_potential_target_flag
					}
				}
				has_country_flag = SOV_mig_design_bureau_dissolved_flag
				has_country_flag = SOV_ilyushin_design_bureau_dissolved_flag
				has_country_flag = SOV_tupolev_design_bureau_dissolved_flag
				has_country_flag = SOV_yakovlev_design_bureau_dissolved_flag
			}
			SOV_pick_great_purge_airforce_type_effect = yes
		}
	}
}


###############
### PHASE 3 ###
###############
# Set the purge type [TYPE]

SOV_pick_regular_purge_administration_type_effect = {
	set_temp_variable = { SOV_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		33 = { # ADVISOR PURGED
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_character = {
						is_character_slot = political_advisor
						SOV_character_can_be_purged = yes
					}
				}
			}
			modifier = { #If someone is already suspicious, then it's more likely that a purge to get rid of him happens
				factor = 3
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = SOV_potential_target_flag
				}
			}
			SOV_trigger_regular_purge_advisor_accused_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		33 = { # CIVIL SERVANTS PURGED
			modifier = {
				factor = 0
				has_idea = SOV_understaffed_bureaucracy
			}
			SOV_trigger_regular_purge_civil_servants_purged_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		33 = { # NKVD PURGE
			modifier = { #Beriya is huevo pocho
				factor = 0
				has_idea = SOV_lavrenty_beriya
			}
			modifier = { #Yagoda is in the NKVD -> He shall be purged
				factor = 3
				has_idea = SOV_genrikh_yagoda
				date > 1938.1.1
			}
			modifier = { #Yezhov is in the NKVD -> He should be purged
				factor = 2
				has_idea = SOV_nikolay_yezhov
				date > 1939.1.1
			}
			SOV_trigger_regular_purge_nkvd_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { SOV_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

SOV_pick_great_purge_administration_type_effect = {
	#JUST IN CASE WE ADD AN EXTRA GREAT PURGE. COULD BE DELETED AND THE EXTRA STEP SKIPPED IF NOT
	if = {
		limit = { #As long as someone can be purged, go ahead
			any_character = {
				is_character_slot = political_advisor
				NOT = { #NKVDs have their own purge
					is_character = SOV_genrikh_yagoda
					is_character = SOV_nikolay_yezhov
					is_character = SOV_lavrenty_beriya
				}
				SOV_character_can_be_purged = yes
			}
		}
		SOV_trigger_great_purge_moscow_trial_effect = yes
	}
	else = {
		#log = "What are you doing the Great Purge of administration is not available you madman"
	}
}

SOV_pick_regular_purge_army_type_effect = {
	set_temp_variable = { SOV_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		25 = { # GENERAL ACCUSED
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_army_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_army_leader = {
					is_corps_commander = yes
					has_character_flag = SOV_potential_target_flag
				}
			}
			SOV_regular_purge_general_accused_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		25 = { # CONSPIRACY IN THE ACADEMY - ARMY
			modifier = {
				factor = 0
				has_idea = SOV_anti_soviet_military_thinking_banned_army
			}
			SOV_regular_purge_conspiracy_in_the_academy_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		25 = { # ANTI-SABOTEUR CAMPAIGN - ARMY
			modifier = {
				factor = 0
				has_idea = SOV_training_activities_curtailed
			}
			SOV_regular_purge_anti_saboteur_campaign_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		25 = { # GENERAL ACCUSES GENERAL
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = { #TODO_MANU: Need to check for 2 guys fulfilling these conditions here
					any_army_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_army_leader = yes
						has_army_ledger = yes
					}
					has_character_flag = SOV_potential_target_flag
				}
			}
			SOV_regular_purge_general_accuses_general_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { SOV_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

SOV_pick_great_purge_army_type_effect = {
#Pick from the different possibilities
	set_temp_variable = { SOV_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		50 = { # JUNIOR ARMY OFFICERS PURGED
			SOV_great_purge_army_junior_officers_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		50 = { # TRIAL OF THE GENERALS
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_army_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_army_leader = yes
						has_army_ledger = yes
					}
					has_character_flag = SOV_potential_target_flag
				}
			}
			SOV_great_purge_army_trial_of_the_generals_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { SOV_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

SOV_pick_regular_purge_navy_type_effect = {
	set_temp_variable = { SOV_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		33 = { # ADMIRAL ACCUSED
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_navy_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_navy_leader = {
					has_character_flag = SOV_potential_target_flag
				}
			}
			SOV_trigger_regular_purge_admiral_accused_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		33 = { # CONSPIRACY IN THE ACADEMY - NAVY
			modifier = {
				factor = 0
				has_idea = SOV_anti_soviet_military_thinking_banned_navy
			}
			SOV_trigger_regular_purge_naval_conspiracy_in_the_academy_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		33 = { # ANTI-SABOTEUR CAMPAIGN - NAVY
			modifier = {
				factor = 0
				has_idea = SOV_shipyard_staff_purged
			}
			SOV_trigger_regular_purge_naval_anti_saboteur_campaign_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { SOV_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

SOV_pick_great_purge_navy_type_effect = {
	set_temp_variable = { SOV_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		50 = { # JUNIOR NAVY OFFICERS PURGED
			modifier = {
				factor = 0
				has_idea = SOV_purged_junior_navy_officers_3
			}
			SOV_trigger_great_purge_junior_naval_officers_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		50 = { # TRIAL OF THE ADMIRALS
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_navy_leader = {
						SOV_character_can_be_purged = yes
						NOT = { has_trait = trait_SOV_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_navy_leader = yes
						has_navy_ledger = yes
					}
					has_character_flag = SOV_potential_target_flag
				}
			}
			SOV_trigger_great_purge_trial_of_the_admirals_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { SOV_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

SOV_pick_regular_purge_airforce_type_effect = {
	set_temp_variable = { SOV_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		25 = { # CONSPIRACY IN THE ACADEMY - AIRFORCE
			modifier = {
				factor = 0
				has_idea = SOV_anti_soviet_military_thinking_banned_airforce
			}
			SOV_trigger_regular_purge_airforce_conspiracy_in_the_academy_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
		25 = { # ANTI-SABOTEUR CAMPAIGN - AIRFORCE
			modifier = {
				factor = 0
				has_idea = SOV_ground_based_training
			}
			SOV_trigger_regular_purge_airforce_anti_saboteur_campaign_effect = yes
			add_to_temp_variable = { SOV_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { SOV_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

SOV_pick_great_purge_airforce_type_effect = {
	random_list = {
		50 = { # DISSOLVE DESIGN BUREAU
			modifier = { #Nothing left to dissolve
				factor = 0
				has_country_flag = SOV_mig_design_bureau_dissolved_flag
				has_country_flag = SOV_ilyushin_design_bureau_dissolved_flag
				has_country_flag = SOV_tupolev_design_bureau_dissolved_flag
				has_country_flag = SOV_yakovlev_design_bureau_dissolved_flag
			}
			SOV_trigger_great_purge_design_bureau_dissolved_effect = yes
		}
		50 = { # PURGE ARIFORCE CHIEFS
			modifier = { #No pastia no comiercio
				factor = 0
				has_country_flag = SOV_purged_airforce_chiefs_flag  #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
				NOT = {
					any_character = {
						has_air_ledger = yes
						has_character_flag = SOV_potential_target_flag
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				OR = {
					NOT = { has_country_flag = SOV_purged_airforce_chiefs_flag } #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
					any_character = {
						has_air_ledger = yes
						has_character_flag = SOV_potential_target_flag
					}
				}
			}
			SOV_trigger_great_purge_airforce_chiefs_effect = yes
		}
	}
}

###############
### PHASE 4 ###
###############
#Set the actual targets (people) [TARGETS] then trigger the appropriate event (Phase 5)

### ADVISOR ACCUSED OF TREASON ###
SOV_trigger_regular_purge_advisor_accused_effect = {
	hidden_effect = {
		if = { #PRIORITIZE FORCED TARGETS
			limit ={
				any_character = {
					is_character_slot = political_advisor
					SOV_character_can_be_purged = yes
					has_character_flag = SOV_potential_target_flag
				}
			}
			random_character = {
				limit = {
					is_character_slot = political_advisor
					SOV_character_can_be_purged = yes
					has_character_flag = SOV_potential_target_flag
				}
				set_character_flag = SOV_targeted_for_purge_flag
				clr_character_flag = SOV_potential_target_flag
				ROOT = { set_variable = { SOV_purged_character_for_loc = PREV } }
				#ROOT = { log = "I am [THIS.GetName] // var is [?ROOT.SOV_purged_character_for_loc.GetName]" } #Debug
			}
		}
		else_if = { #If no one to prio, then pick a random one
			limit = {
				any_character = {
					is_character_slot = political_advisor
					SOV_character_can_be_purged = yes
				}
			}
			random_character = {
				limit = {
					is_character_slot = political_advisor
					SOV_character_can_be_purged = yes
				}
				set_character_flag = SOV_targeted_for_purge_flag
				ROOT = { set_variable = { SOV_purged_character_for_loc = PREV } }
				#ROOT = { log = "This is [THIS.GetName] // PREV is [PREV.GetName] // ROOT is [ROOT.GetName] // VAR is [?ROOT.SOV_purged_character_for_loc.GetName]" } #Debug
			}
		}
		#log = "Person is [?SOV_purged_character_for_loc.GetName]" #Debug
	}

	country_event = NSB_soviet_paranoia_system_events.11 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

### CIVIL SERVANTS PURGED
SOV_trigger_regular_purge_civil_servants_purged_effect = {
	country_event = NSB_soviet_paranoia_system_events.12 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

### PURGE THE NKVD ###
SOV_trigger_regular_purge_nkvd_effect = {
	country_event = NSB_soviet_paranoia_system_events.13 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

### GREAT PURGE - MOSCOW TRIALS ###
SOV_trigger_great_purge_moscow_trial_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = SOV_targeted_for_purge_flag
					SOV_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						is_character_slot = political_advisor
						has_character_flag = SOV_targeted_for_purge_flag
						SOV_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?SOV_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = SOV_specific_random_purge_targets_override }
			SOV_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = SOV_paranoia_great_purge_administration_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		#log = " PEOPLE TO PURGE IS [?temp_people_to_purge]" #Debug
		#log = " INDEX IS = [?temp_targets_index]" #Debug
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}
			#log = "Random people" #Debug
			while_loop_effect = {
				limit = {
					check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
				}

				if = { #PRIORITIZE POTENTIAL TARGETS
					limit ={
						any_character = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							has_character_flag = SOV_potential_target_flag
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
					}
					#log ="PRIOING STUFF" #Debug
					random_character = {
						limit = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							has_character_flag = SOV_potential_target_flag
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag

						#log = "TARGET FIXED: [THIS.GetName]" #Debug
					}

				}
				else_if = { #If no one to prio, then pick a random one
					limit = {
						any_character = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
					}
					#log = "RANDOM STUFF" #Debug
					random_character = {
						limit = {
							is_character_slot = political_advisor
							SOV_character_can_be_purged = yes
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						#log = "RANDOM ADVISOR PICK: [THIS.GetName]" #Debug
					}

				}
				else = {
					#log = "RAN OUT OF POLITICAL ADVISORS, DAMN!" #Debug
				}
				add_to_temp_variable = { temp_targets_index = 1 }
				#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
			}
		}
		else = {
			#log = "No Random People" #Debug
		}
	}

	country_event = NSB_soviet_paranoia_system_events.19 # TRIGGER EVENT

	set_variable = { SOV_last_great_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

### GENERAL ACCUSED OF TREASON ###
SOV_regular_purge_general_accused_effect = {
	hidden_effect = {
		if = { #PRIORITIZE FORCED TARGETS
			limit ={
				any_army_leader = {
					has_character_flag = SOV_potential_target_flag
					SOV_character_can_be_purged = yes
				}
			}
			random_army_leader = {
				limit = {
					has_character_flag = SOV_potential_target_flag
					SOV_character_can_be_purged = yes
				}
				set_character_flag = SOV_targeted_for_purge_flag
				clr_character_flag = SOV_potential_target_flag
				SOV = {
					set_variable = { SOV_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accused_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_purged_character_for_loc = PREV } }
				ROOT = { log = "This is [THIS.GetName] // PREV is [PREV.GetName] // ROOT is [ROOT.GetName] // VAR is [?ROOT.SOV_purged_character_for_loc.GetName]" }
			}
		}
		else = {
			random_army_leader = {
				limit = {
					SOV_character_can_be_purged = yes
					NOT = { has_trait = trait_SOV_stalinist }
				}
				set_character_flag = SOV_targeted_for_purge_flag
				SOV = {
					set_variable = { SOV_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accused_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_purged_character_for_loc = PREV } }
				ROOT = { log = "This is [THIS.GetName] // PREV is [PREV.GetName] // ROOT is [ROOT.GetName] // VAR is [?ROOT.SOV_purged_character_for_loc.GetName]" }
			}
		}
	}

	var:SOV_purged_character_for_loc = { unit_leader_event = NSB_soviet_paranoia_system_events.21 } # TRIGGER EVENT
	set_variable = { SOV_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

### CONSPIRACY IN THE ACADEMY ###
SOV_regular_purge_conspiracy_in_the_academy_effect = {
	country_event = NSB_soviet_paranoia_system_events.22 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

### ANTI-SABOTEUR CAMPAIGN ###
SOV_regular_purge_anti_saboteur_campaign_effect = {
	country_event = NSB_soviet_paranoia_system_events.23 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

### GENERAL ACCUSES GENERAL ###
SOV_regular_purge_general_accuses_general_effect = {
	hidden_effect = {
		# ACCUSER
		if = { # PRIO stalinist or politically connected
			limit ={
				any_army_leader = {
					OR = {
						has_trait = trait_SOV_stalinist
						has_trait = politically_connected
					}
					skill < 4
				}
			}
			random_army_leader = {
				limit = {
					OR = {
						has_trait = trait_SOV_stalinist
						has_trait = politically_connected
					}
					skill < 4
				}
				set_character_flag = SOV_purge_accuser_flag
				SOV = {
					set_variable = { SOV_accuser_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accuser_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_accuser_character_for_loc = PREV } }
			}
		}
		else = {
			random_army_leader = {
				set_character_flag = SOV_purge_accuser_flag
				SOV = {
					set_variable = { SOV_accuser_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accuser_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_accuser_character_for_loc = PREV } }
			}
		}

		# ACCUSED
		if = { # PRIO more level
			limit ={
				any_army_leader = {
					SOV_character_can_be_purged = yes
					OR = {
						has_character_flag = SOV_potential_target_flag
						AND = {
							NOT = { has_trait = trait_SOV_stalinist }
							NOT = { has_trait = politically_connected }
						}
					}
					skill > 3
				}
			}
			random_army_leader = {
				limit = {
					SOV_character_can_be_purged = yes
					OR = {
						has_character_flag = SOV_potential_target_flag
						AND = {
							NOT = { has_trait = trait_SOV_stalinist }
							NOT = { has_trait = politically_connected }
						}
					}
					skill > 3
				}
				set_character_flag = SOV_purge_accused_flag
				SOV = {
					set_variable = { SOV_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accused_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_accused_character_for_loc = PREV } }

			}
		}
		else = {
			random_army_leader = {
				set_character_flag = SOV_purge_accused_flag
				SOV = {
					set_variable = { SOV_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accused_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_accused_character_for_loc = PREV } }
			}
		}

		set_variable = { SOV_combined_unit_leader_level = SOV_accuser_unit_leader_level }
		add_to_variable = { SOV_combined_unit_leader_level = SOV_accused_unit_leader_level }
	}

	var:SOV_accused_character_for_loc = { unit_leader_event = NSB_soviet_paranoia_system_events.24 } # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_great_purge_army_junior_officers_effect = {
	country_event = NSB_soviet_paranoia_system_events.28 # TRIGGER EVENT (PHASE 5)

	set_variable = { SOV_last_great_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}


### TRIAL OF THE GENERALS ###
SOV_great_purge_army_trial_of_the_generals_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					OR = {
						is_army_leader = yes #Generals + Marshals
						has_army_ledger = yes
					}
					has_character_flag = SOV_targeted_for_purge_flag
					SOV_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						OR = {
							is_army_leader = yes #Generals + Marshals
							has_army_ledger = yes
						}
						has_character_flag = SOV_targeted_for_purge_flag
						SOV_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?SOV_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = SOV_specific_random_purge_targets_override }
			SOV_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = SOV_paranoia_great_purge_army_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		# PICK RANDOM PEOPLE IF APPROPRIATE
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}

			# PICK 1 FIELD MARSHAL
			hidden_effect = {
				if = { # Pick an already-targeted Marshal, if any
					limit = {
						any_army_leader = {
							is_field_marshal = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_army_leader = {
						limit = {
							is_field_marshal = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag
						#ROOT = { log = "Chosen Marshal - Prioritized - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick an already-targeted Army advisor, if any
					limit = {
						any_character = {
							has_army_ledger = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_character = {
						limit = {
							has_army_ledger = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag
						#ROOT = { log = "Chosen Advisor - Prioritized - [PREV.GetName]" } Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick a random marshal
					limit = {
						any_army_leader = {
							is_field_marshal = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_army_leader = {
						limit = {
							is_field_marshal = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						#ROOT = { log = "Chosen Marshal - Random - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick a random army advisor
					limit = {
						any_character = {
							has_army_ledger = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_character = {
						limit = {
							has_army_ledger = yes
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						#ROOT = { log = "Chosen Advisor - Random - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}

				while_loop_effect = {
					limit = {
						check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
					}
					if = { #PRIORITIZE FORCED TARGETS - GENERALS
						limit ={
							any_army_leader = {
								is_corps_commander = yes
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						#log = "Prioritized General" #Debug
						random_army_leader = {
							limit = {
								is_corps_commander = yes
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag
							clr_character_flag = SOV_potential_target_flag

							#ROOT = { log = "Chosen General - Prioritized - [PREV.GetName]" } #Debug
						}
						#log = "TARGET FIXED - General" #Debug
					}
					else_if = { #PRIORITIZE FORCED TARGETS - MARSHALS + ARMY ADVISORS
						limit ={
							any_character = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						random_character = {
							limit = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								has_character_flag = SOV_potential_target_flag
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag
							clr_character_flag = SOV_potential_target_flag

							#ROOT = { log = "Chosen Marshal/Advisor - Prioritized - [PREV.GetName]" } #Debug
						}
						#log = "TARGET FIXED - Marshal/Advisor" #Debug
					}
					else_if = { #FILL TARGET WITH RANDOM GENERALS (Could have an extra step, checking for non-Stalinist ppl, then this one)
						limit = {
							any_army_leader = {
								is_corps_commander = yes
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						random_army_leader = {
							limit = {
								is_corps_commander = yes
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag

							#ROOT = { log = "Chosen General - Random - [PREV.GetName]" } #Debug
						}
						#log = "RANDOM GENERAL PICK" #Debug
					}
					else_if = { #IF NOT ENOUGH GENERALS, THEN PICK SOME EXTRA MARSHALS/ADVISORS
						limit = {
							any_character = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
						}
						random_army_leader = {
							limit = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								NOT = { has_character_flag = SOV_targeted_for_purge_flag }
								SOV_character_can_be_purged = yes
								NOT = { has_trait = trait_SOV_stalinist }
							}
							set_character_flag = SOV_targeted_for_purge_flag

							#ROOT = { log = "Chosen Marshal/Advisor - Random - [PREV.GetName]" } #Debug

						}
						#log = "RANDOM MARSHAL/ADVISOR PICK" #Debug
					}
					else = {
						#log = "RAN OUT OF ARMY LEADERS, DAMN!" #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
					#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
				}
			}
		}
	}

	country_event = NSB_soviet_paranoia_system_events.29 # TRIGGER EVENT (PHASE 5)

	set_variable = { SOV_last_great_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}


SOV_trigger_regular_purge_admiral_accused_effect = {
	hidden_effect = {
		if = { #PRIORITIZE FORCED TARGETS
			limit ={
				any_navy_leader = {
					has_character_flag = SOV_potential_target_flag
					SOV_character_can_be_purged = yes
				}
			}
			random_navy_leader = {
				limit = {
					has_character_flag = SOV_potential_target_flag
					SOV_character_can_be_purged = yes
				}
				set_character_flag = SOV_targeted_for_purge_flag
				clr_character_flag = SOV_potential_target_flag
				SOV = {
					set_variable = { SOV_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accused_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_purged_character_for_loc = PREV } }	
			}
		}
		else = {
			random_navy_leader = {
				limit = {
					SOV_character_can_be_purged = yes
					NOT = { has_trait = trait_SOV_stalinist }
				}
				set_character_flag = SOV_targeted_for_purge_flag
				SOV = {
					set_variable = { SOV_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { SOV_accused_unit_leader_level = SOV_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { SOV_purged_character_for_loc = PREV } }	
			}
		}
	}
	
	var:SOV_purged_character_for_loc = { unit_leader_event = NSB_soviet_paranoia_system_events.31 } # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_regular_purge_naval_conspiracy_in_the_academy_effect = {
	country_event = NSB_soviet_paranoia_system_events.32 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_regular_purge_naval_anti_saboteur_campaign_effect = {
	country_event = NSB_soviet_paranoia_system_events.33 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_great_purge_junior_naval_officers_effect = {
	country_event = NSB_soviet_paranoia_system_events.38 # TRIGGER EVENT

	set_variable = { SOV_last_great_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_great_purge_trial_of_the_admirals_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					OR = {
						is_navy_leader = yes #Admirals
						has_navy_ledger = yes #Navy Advisors
					}
					has_character_flag = SOV_targeted_for_purge_flag
					SOV_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						OR = {
							is_navy_leader = yes #Admirals
							has_navy_ledger = yes #Navy Advisors
						}
						has_character_flag = SOV_targeted_for_purge_flag
						SOV_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?SOV_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = SOV_specific_random_purge_targets_override }
			SOV_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = SOV_paranoia_great_purge_navy_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		# PICK RANDOM PEOPLE IF APPROPRIATE
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}

			while_loop_effect = {
				limit = {
					check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
				}
				if = { #PRIORITIZE FORCED TARGETS - ADMIRALS/ADVISORS
					limit ={
						any_character = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_character = {
						limit = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag
					}
					#log = "TARGET FIXED" #Debug
				}
				else_if = { #FILL TARGET WITH RANDOM ADMIRALS/ADVISORS (Could have an extra step, checking for non-Stalinist ppl, then this one)
					limit = {
						any_character = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
					}
					random_character = {
						limit = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
							SOV_character_can_be_purged = yes
							NOT = { has_trait = trait_SOV_stalinist }
						}
						set_character_flag = SOV_targeted_for_purge_flag
					}
					#log = "RANDOM ADMIRAL/ADVISOR PICK" #Debug
				}
				else = {
					#log = "RAN OUT OF NAVY LEADERS, DAMN!" #Debug
				}
				add_to_temp_variable = { temp_targets_index = 1 }
				#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
			}
		}
	}

	country_event = NSB_soviet_paranoia_system_events.39 # TRIGGER EVENT

	set_variable = { SOV_last_great_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_regular_purge_airforce_conspiracy_in_the_academy_effect = {
	country_event = NSB_soviet_paranoia_system_events.41 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_regular_purge_airforce_anti_saboteur_campaign_effect = {
	country_event = NSB_soviet_paranoia_system_events.42 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_great_purge_design_bureau_dissolved_effect = {
	hidden_effect = {
		set_variable = { SOV_random_bureau_to_dissolve = random } # THIS IS NOW PASSED TO THE EVENT, BUT NEEDS TO BE DONE HERE AND STORED IN VAR
		#log = "Random bureau to dissolve: [?SOV_random_bureau_to_dissolve]"
	}

	country_event = NSB_soviet_paranoia_system_events.48 # TRIGGER EVENT

	set_variable = { SOV_last_great_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}

SOV_trigger_great_purge_airforce_chiefs_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter
		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					has_air_ledger = yes
					has_character_flag = SOV_targeted_for_purge_flag
					SOV_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						has_air_ledger = yes
						has_character_flag = SOV_targeted_for_purge_flag
						SOV_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}
		else = { # If no one targeted via another effect, then pick historically purged people
			if = {
				limit = {
					has_character = SOV_sergey_khudyakov
					SOV_sergey_khudyakov = { SOV_character_can_be_purged = yes }
				}
				SOV_sergey_khudyakov = { #MHC
					set_character_flag = SOV_targeted_for_purge_flag
				}
				add_to_temp_variable = { temp_targets_index = 1 }
			}
			if = {
				limit = {
					has_character = SOV_yakov_smushkevich
					SOV_yakov_smushkevich = { SOV_character_can_be_purged = yes }
				}
				SOV_yakov_smushkevich = {#Chief
					set_character_flag = SOV_targeted_for_purge_flag
				}
				add_to_temp_variable = { temp_targets_index = 1 }
			}
			if = {
				limit = {
					has_character = SOV_pavel_rychagov
					SOV_pavel_rychagov = { SOV_character_can_be_purged = yes }
				}
				SOV_pavel_rychagov = { #Chief
					set_character_flag = SOV_targeted_for_purge_flag
				}
				add_to_temp_variable = { temp_targets_index = 1 }
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?SOV_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { SOV_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = SOV_specific_random_purge_targets_override }
			SOV_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = SOV_paranoia_great_purge_air_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		# PICK RANDOM PEOPLE IF APPROPRIATE
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}

			while_loop_effect = {
				limit = {
					check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
				}
				if = { #PRIORITIZE FORCED TARGETS
					limit ={
						any_character = {
							has_air_ledger = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
						}
					}
					random_character = {
						limit = {
							has_air_ledger = yes
							has_character_flag = SOV_potential_target_flag
							SOV_character_can_be_purged = yes
						}
						set_character_flag = SOV_targeted_for_purge_flag
						clr_character_flag = SOV_potential_target_flag
					}
					#log = "TARGET FIXED" #Debug
				}
				else_if = { #FILL TARGET WITH RANDOM AIRFORCE ADVISORS (Could have an extra step, checking for non-Stalinist ppl, then this one)
					limit = {
						any_character = {
							has_air_ledger = yes
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
							SOV_character_can_be_purged = yes
						}
					}
					random_character = {
						limit = {
							has_air_ledger = yes
							NOT = { has_character_flag = SOV_targeted_for_purge_flag }
							SOV_character_can_be_purged = yes
						}
						set_character_flag = SOV_targeted_for_purge_flag
					}
					#log = "RANDOM ADMIRAL/ADVISOR PICK" #Debug
				}
				else = {
					#log = "RAN OUT OF NAVY LEADERS, DAMN!" #Debug
				}
				add_to_temp_variable = { temp_targets_index = 1 }
				#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
			}
		}
	}

	country_event = NSB_soviet_paranoia_system_events.49 # TRIGGER EVENT

	set_variable = { SOV_last_regular_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = SOV_last_purge_flag
}




####
#### INDUSTRIAL STUFF ####
####

SOV_replace_industrial_designer = {
	custom_effect_tooltip = SOV_upgrade_industrial_designer_tt
	if = {
		limit = {
			has_idea = stalingrad_tractor_factory
		}
		swap_ideas = {
			remove_idea = stalingrad_tractor_factory
			add_idea = stalingrad_tractor_factory_improved
		}
	}
	else_if = {
		limit = {
			has_idea = leningrad_polytechnical_institute
		}
		swap_ideas = {
			remove_idea = leningrad_polytechnical_institute
			add_idea = leningrad_polytechnical_institute_improved
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_soviet_railways
		}
		swap_ideas = {
			remove_idea = SOV_soviet_railways
			add_idea = SOV_soviet_railways_improved
		}
	}
}



####
#### FOREIGN POLITICS ####
####

SOV_fortify_mongolian_border_effect = {
	330 = {
		add_building_construction = { #ULAAN BAATAR
			type = bunker
			level = 1
			instant_build = yes
			province = 4801
		}
	}
	if = {
		limit = {
			339 = { #HULUNBUIR
				controller = {
					SOV_is_threated_by_japan = yes
				}
			}
		}
		301 = {
			add_building_construction = { #BORDER
				type = bunker
				level = 2
				instant_build = yes
				province = {
					id = 4792
					id = 12557
					id = 1743
				}
			}
		}
		ROOT = { set_country_flag = SOV_mongolian_forts_1_flag }
	}
	if = {
		limit = {
			612 = { #CHAHAR
				controller = {
					SOV_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = SOV_mongolian_forts_1_flag }
			}
			301 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 12629
						id = 4873
					}
				}
			}
		}
		else = {
			301 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 1743
						id = 12629
						id = 4873
					}
				}
			}
		}
		303 = {
			add_building_construction = { #BORDER
				type = bunker
				level = 2
				instant_build = yes
				province = {
					id = 10575
					id = 4655
				}
			}
		}
		ROOT = { clr_country_flag = SOV_mongolian_forts_1_flag }
		ROOT = { set_country_flag = SOV_mongolian_forts_2_flag }
	}
	if = {
		limit = {
			621 = { #SUIYUAN
				controller = {
					SOV_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = SOV_mongolian_forts_2_flag }
			}
			303 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 1723
						id = 1853
						id = 12539
						id = 10558
					}
				}
			}
		}
		else = {
			303 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 4655
						id = 1723
						id = 1853
						id = 12539
						id = 10558
					}
				}
			}
		}
		ROOT = { clr_country_flag = SOV_mongolian_forts_2_flag }
		ROOT = { set_country_flag = SOV_mongolian_forts_3_flag }
	}
	if = {
		limit = {
			344 = { #JIUQUAN
				controller = {
					SOV_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = SOV_mongolian_forts_3_flag }
			}
			303 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 10689
						id = 4786
						id = 1781
					}
				}
			}
		}
		else = {
			303 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 10558
						id = 10689
						id = 4786
						id = 1781
					}
				}
			}
		}
		ROOT = { clr_country_flag = SOV_mongolian_forts_3_flag }
		ROOT = { set_country_flag = SOV_mongolian_forts_4_flag }
	}
	if = {
		limit = {
			340 = { #DABANCHENG
				controller = {
					SOV_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = SOV_mongolian_forts_4_flag }
			}
			303 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 10560
						id = 1855
					}
				}
			}
		}
		else = {
			303 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 1781
						id = 10560
						id = 1855
					}
				}
			}
		}
		303 = {
			add_building_construction = { #BORDER
				type = bunker
				level = 2
				instant_build = yes
				province = {
					id = 7808
				}
			}
		}
		ROOT = { clr_country_flag = SOV_mongolian_forts_4_flag }
		ROOT = { set_country_flag = SOV_mongolian_forts_5_flag }
	}
	if = {
		limit = {
			618 = { #DZUNGARIA
				controller = {
					SOV_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = SOV_mongolian_forts_5_flag }
			}
			302 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 7870
						id = 1774
						id = 10539
						id = 4751
					}
				}
			}
		}
		else = {
			302 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 7808
						id = 7870
						id = 1774
						id = 10539
						id = 4751
					}
				}
			}
		}
		ROOT = { clr_country_flag = SOV_mongolian_forts_5_flag }
	}
}

SOV_clear_targeted_relation_modifiers_effect = {
	#log = "Effect Called"
	every_other_country = {
		limit = {
			capital_scope = { is_on_continent = europe }
			SOV = {
				has_relation_modifier = {
					target = PREV
					modifier = SOV_face_western_fascism_static
				}
			}
		}
		#log = "Removing shit in [THIS.GetName]"
		SOV = {
			remove_relation_modifier = {
				target = PREV
				modifier = SOV_face_western_fascism_static
			}
		}
	}
	#log = "------- SPACE -------"
	GER = {
		SOV = {
			remove_relation_modifier = {
				target = PREV
				modifier = SOV_face_western_fascism_static
			}
			#log = "[GER.getname] is now clean"
		}
	}
}

SOV_clear_hidden_targeted_ns_effect = {
	if = {
		limit = {
			has_idea = SOV_targeted_bonus_against_ENG
		}
		add_ideas = SOV_targeted_bonus_against_ENG
	}
	if = {
		limit = {
			has_idea = SOV_targeted_bonus_against_FRA
		}
		add_ideas = SOV_targeted_bonus_against_FRA
	}
	if = {
		limit = {
			has_idea = SOV_targeted_bonus_against_GER
		}
		add_ideas = SOV_targeted_bonus_against_GER
	}
	if = {
		limit = {
			has_idea = SOV_targeted_bonus_against_ITA
		}
		add_ideas = SOV_targeted_bonus_against_ITA
	}
	if = {
		limit = {
			has_idea = SOV_targeted_bonus_against_USA
		}
		add_ideas = SOV_targeted_bonus_against_USA
	}
	if = {
		limit = {
			has_idea = SOV_targeted_bonus_against_JAP
		}
		add_ideas = SOV_targeted_bonus_against_JAP
	}
}

SOV_foreign_politics_decision_cost_reduction_effect = { #Add more diplomacy vars here to divide and round them
	divide_variable = { SOV_pressure_country_government_cost = 2 }
	divide_variable = { SOV_promote_ideology_rallies_cost = 2 }
	divide_variable = { SOV_send_ultimatum_to_country_cost = 2 }
	divide_variable = { SOV_send_infantry_equipment_cost = 2 }
	divide_variable = { SOV_peace_deal_cost = 2 }
	divide_variable = { SOV_sinkiang_proposal_cost = 2 }

	round_variable = SOV_pressure_country_government_cost
	round_variable = SOV_promote_ideology_rallies_cost
	round_variable = SOV_send_ultimatum_to_country_cost
	round_variable = SOV_send_infantry_equipment_cost
	round_variable = SOV_peace_deal_cost
	round_variable = SOV_sinkiang_proposal_cost
}

SOV_approach_sinkiang_diplomacy_effect = {
	
}

SOV_set_appropriate_national_academy_of_sciences_flag_effect = {
	
}

SOV_build_national_academy_of_sciences_effect = {
	if = {
		limit = {
			country_exists = FROM
		}
		custom_effect_tooltip = SOV_national_academy_of_sciences_construction_independent_tt
	}
	else = {
		custom_effect_tooltip = SOV_national_academy_of_sciences_construction_integrated_tt
	}
	ROOT = {
		custom_effect_tooltip = SOV_national_academy_of_sciences_research_tt
		add_to_variable = { SOV_academy_of_sciences_research_speed_factor = SOV_national_academy_of_sciences_research_increase }
	}
}


SOV_clear_hostile_diplomacy_in_both_countries = { #It assumes you want to clear claims and wargoals against each other in both ROOT and FROM
	#First clear ROOT
	if = {
		limit = {
			any_owned_state = {
				is_claimed_by = FROM
			}
		}
		every_owned_state = {
			limit = {
				is_claimed_by = FROM
			}
			remove_claim_by = FROM
		}
	}
	if = {
		limit = {
			FROM = { has_wargoal_against = ROOT }
		}
		FROM = {
			remove_wargoal = {
				type = all
				target = ROOT
			}
		}
	}

	#Now clear FROM
	if = {
		limit = {
			FROM = {
				any_owned_state = {
					is_claimed_by = ROOT
				}
			}
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_claimed_by = ROOT
				}
				remove_claim_by = ROOT
			}
		}
	}
	if = {
		limit = {
			has_wargoal_against = FROM
		}
		remove_wargoal = {
			type = all
			target = FROM
		}
	}
}

SOV_clear_hostile_diplomacy_in_all_three_countries = { #It assumes you want to clear claims and wargoals against each other in ROOT, FROM and POL
	#First clear ROOT
	if = {
		limit = {
			any_owned_state = {
				is_claimed_by = FROM
			}
		}
		every_owned_state = {
			limit = {
				is_claimed_by = FROM
			}
			remove_claim_by = FROM
		}
	}
	if = {
		limit = {
			any_owned_state = {
				is_claimed_by = POL
			}
		}
		every_owned_state = {
			limit = {
				is_claimed_by = POL
			}
			remove_claim_by = POL
		}
	}
	if = {
		limit = {
			FROM = { has_wargoal_against = ROOT }
		}
		FROM = {
			remove_wargoal = {
				type = all
				target = ROOT
			}
		}
	}
	if = {
		limit = {
			POL = { has_wargoal_against = ROOT }
		}
		POL = {
			remove_wargoal = {
				type = all
				target = ROOT
			}
		}
	}

	#Now clear FROM
	if = {
		limit = {
			FROM = {
				any_owned_state = {
					is_claimed_by = ROOT
				}
			}
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_claimed_by = ROOT
				}
				remove_claim_by = ROOT
			}
		}
	}
	if = {
		limit = {
			FROM = {
				any_owned_state = {
					is_claimed_by = POL
				}
			}
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_claimed_by = POL
				}
				remove_claim_by = POL
			}
		}
	}
	if = {
		limit = {
			has_wargoal_against = FROM
		}
		remove_wargoal = {
			type = all
			target = FROM
		}
	}
	if = {
		limit = {
			POL = { has_wargoal_against = FROM }
		}
		POL = {
			remove_wargoal = {
				type = all
				target = FROM
			}
		}
	}

	#Finally, clear POL
	if = {
		limit = {
			POL = {
				any_owned_state = {
					is_claimed_by = ROOT
				}
			}
		}
		POL = {
			every_owned_state = {
				limit = {
					is_claimed_by = ROOT
				}
				remove_claim_by = ROOT
			}
		}
	}
	if = {
		limit = {
			POL = {
				any_owned_state = {
					is_claimed_by = FROM
				}
			}
		}
		POL = {
			every_owned_state = {
				limit = {
					is_claimed_by = FROM
				}
				remove_claim_by = FROM
			}
		}
	}
	if = {
		limit = {
			has_wargoal_against = POL
		}
		remove_wargoal = {
			type = all
			target = POL
		}
	}
	if = {
		limit = {
			FROM = { has_wargoal_against = POL }
		}
		FROM = {
			remove_wargoal = {
				type = all
				target = POL
			}
		}
	}
}

SOV_apply_collective_ageement_on_mutual_assistance_effects_basic = {
	SOV_clear_hostile_diplomacy_in_both_countries = yes #Clears wargoals and claims

	#FRA -> SOV
	FROM = {
		diplomatic_relation = {
			country = ROOT
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = ROOT
		add_opinion_modifier = {
			target = ROOT
			modifier = SOV_policies_of_collective_security_opinion
		}
	}

	#SOV -> FRA
	diplomatic_relation = {
		country = FROM
		relation = non_aggression_pact
		active = yes
	}
	give_guarantee = FROM
	add_opinion_modifier = {
		target = FROM
		modifier = SOV_policies_of_collective_security_opinion
	}
}


SOV_apply_collective_ageement_on_mutual_assistance_effects_poland_included = {
	SOV_clear_hostile_diplomacy_in_all_three_countries = yes #Clears wargoals and claims in all three countries

	#SOV -> FRA
	diplomatic_relation = {
		country = FROM
		relation = non_aggression_pact
		active = yes
	}
	give_guarantee = FROM
	add_opinion_modifier = {
		target = FROM
		modifier = SOV_policies_of_collective_security_opinion
	}

	#SOV -> POL
	diplomatic_relation = {
		country = POL
		relation = non_aggression_pact
		active = yes
	}
	give_guarantee = POL
	add_opinion_modifier = {
		target = POL
		modifier = SOV_policies_of_collective_security_opinion
	}

	#FRA -> SOV
	FROM = {
		diplomatic_relation = {
			country = ROOT
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = ROOT
		add_opinion_modifier = {
			target = ROOT
			modifier = SOV_policies_of_collective_security_opinion
		}
	}

	#FRA -> POL
	FROM = {
		diplomatic_relation = {
			country = POL
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = POL
		add_opinion_modifier = {
			target = POL
			modifier = SOV_policies_of_collective_security_opinion
		}
	}

	#POL -> SOV
	POL = {
		diplomatic_relation = {
			country = ROOT
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = ROOT
		add_opinion_modifier = {
			target = ROOT
			modifier = SOV_policies_of_collective_security_opinion
		}
	}

	#POL -> FRA
	POL = {
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = FROM
		add_opinion_modifier = {
			target = FROM
			modifier = SOV_policies_of_collective_security_opinion
		}
	}
}

SOV_set_military_offensive_effect = {
	set_country_flag = SOV_military_offensive_in_progress_flag
	for_each_scope_loop = {
		array = SOV_military_offensive_states
		add_dynamic_modifier = {
			modifier = SOV_soviet_military_offensive
			days = 90
			scope = SOV
		}
	}
}

SOV_clean_military_offensive_effect = {
	clr_country_flag = SOV_military_offensive_in_progress_flag
	for_each_scope_loop = {
		array = SOV_military_offensive_states
		remove_dynamic_modifier = { modifier = SOV_soviet_military_offensive }
	}
	clear_array = SOV_military_offensive_states
	clear_variable = SOV_offensive_main_objective
}

SOV_spawn_penal_divisions_effect = {
	hidden_effect = {
		capital_scope = {
			create_unit = {
				division = "division_template = \"Shtrafnaya Chast\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
		set_country_flag = SOV_penal_units_raised_flag
	}
}

SOV_manage_spanish_generals_exiled_in_ussr_effect = {
	#log = "FROM is [FROM.GetName] // ROOT is [ROOT.GetName]" #Debug
	#Exiled SPD/SPC Generals
	if = { #Líster
		limit = {
			ROOT = { tag = SPD }
			SOV = {
				has_country_flag = SOV_spanish_refugee_generals_welcome_flag
				has_completed_focus = SOV_the_centre
			}
		}
		ROOT = { SPR_enrique_lister = { set_nationality = SOV } }
		SOV = {
			SPR_enrique_lister = {
				set_variable = { SOV.SOV_spanish_general = THIS }
				#log = "Líster is [?SOV.SOV_spanish_general.GetName]" #Debug
				#Líster joins the USSR as a Stalinist
				if = {
					limit = {
						has_trait = trait_SPR_anti_stalinist_loyalties
					}
					remove_unit_leader_trait = trait_SPR_anti_stalinist_loyalties
				}
				if = {
					limit = {
						has_trait = trait_SPR_republican_loyalties
					}
					remove_unit_leader_trait = trait_SPR_republican_loyalties
				}
				if = {
					limit = {
						NOT = { has_trait = trait_SPR_stalinist_loyalties }
					}
					add_unit_leader_trait = trait_SPR_stalinist_loyalties
				}
			}
			set_country_flag = SOV_go_go_general_flag
		}
	}
	if = {
		limit = {
			SOV = { has_country_flag = SOV_go_go_general_flag }
		}
		var:SOV.SOV_spanish_general = {
			#log = "I am [THIS.GetName]" #Debug
			if = { # Won't be a marshal in the USSR
				limit = {
					is_field_marshal = yes
				}
				demote_leader = yes
			}
			if = { # Won't be an advisor in the USSR
				limit = {
					is_advisor = yes
				}
				if = {
					limit = {
						is_character_slot = theorist
					}
					remove_advisor_role = { slot = theorist } 
				}
				else_if = {
					limit = {
						is_character_slot = army_chief
					}
					remove_advisor_role = { slot = army_chief } 
				}
				if = {
					limit = {
						is_character_slot = high_command
					}
					remove_advisor_role = { slot = high_command } 
				}
			}
			unit_leader_event = { id = NSB_soviet_spanish_civil_war.1 days = 5 random_days = 2 }
		}
		SOV = { clr_country_flag = SOV_spanish_refugee_generals_welcome_flag }
	}
}

#POUM brigades come to aid in the Soviet Civil War
SOV_poum_brigades_to_soviet_civil_war_effect = {

	add_equipment_to_stockpile = {
		type = infantry_equipment
		amount = 6000
		producer = SPC
	}
	add_equipment_to_stockpile = {
		type = support_equipment
		amount = 600
		producer = SPC
	}

	division_template = {
		name = "International Marxist Brigades"
		is_locked = yes
		priority = 1
		template_counter = 14
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 1 y = 0 }
			infantry = { x = 1 y = 1 }
		}
	}

	division_template = {
		name = "POUM Special Brigades"
		is_locked = yes
		priority = 1
		template_counter = 02
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
			infantry = { x = 1 y = 0 }
			infantry = { x = 1 y = 1 }
			infantry = { x = 1 y = 2 }
		}
		support = {
			engineer = { x = 0 y = 0 }
			recon = { x = 0 y = 1 }
			artillery = { x = 0 y = 2 }
			anti_tank = { x = 0 y = 3 }
		}
	}

	division_template = {
		name = "Brigada de las Juventudes del POUM"
		template_counter = 0
		division_names_group = SPD_INF_02
		is_locked = yes
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
		}
		support = {
			engineer = { x = 0 y = 0 }
		}
	}

	var:SOV_civil_war_start_state = {
		create_unit = { #Int Marxist Brigades
			division = "name = \"International Marxist Brigade\" division_template = \"International Marxist Brigades\" start_experience_factor = 0.7 start_equipment_factor = 1.0" owner = SOV count = 12
		}
		create_unit = { #POUM Special Brigades
			division = "name = \"POUM Special Brigade\" division_template = \"POUM Special Brigades\" start_experience_factor = 1 start_equipment_factor = 1.0" owner = SOV count = 2
		}
		create_unit = { #Juventudes Sindicales
			division = "name = \"Brigada de las Juventudes del POUM\" division_template = \"Brigada de las Juventudes del POUM\" start_experience_factor = 0.6 start_equipment_factor = 1.0" owner = SOV count = 6
		}
	}

}

SOV_damage_relocated_military_factories_effect = {
	if = {
		limit = {
			FROM = {
				NOT = { is_fully_controlled_by = ROOT }
			}
		}
		damage_building = { type = arms_factory damage = 0.9 }
	}
	else = {
		damage_building = { type = arms_factory damage = 0.5 }
	}
}

SOV_damage_relocated_civilian_factories_effect = {
	if = {
		limit = {
			FROM = {
				NOT = { is_fully_controlled_by = ROOT }
			}
		}
		damage_building = { type = industrial_complex damage = 0.9 }
	}
	else = {
		damage_building = { type = industrial_complex damage = 0.5 }
	}
}

#RELOCATE INDUSTRY - ROOT = TAG // FROM = TARGETED STATE (to remove industry) // THIS = TARGETED STATE (to remove industry) [Effect assumed to be called inside FROM scope]
SOV_relocate_industry_in_appropriate_state_effect = {
	if = {
		limit = {
			OR = {
				has_state_flag = SOV_civs_removed_flag
				has_state_flag = SOV_mils_removed_flag
			}
		}
		ROOT = {
			if = { #Prio the Urals
				limit = {
					any_controlled_state = {
						SOV_is_industrial_relocation_destiny_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
				}
				random_controlled_state = {
					limit = {
						SOV_is_industrial_relocation_destiny_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
					#FIRST FACTORY - Prio Mil
					if = {
						limit = {
							FROM = { has_state_flag = SOV_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_mils_removed_flag value = -1 } }
						SOV_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = SOV_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_civs_removed_flag value = -1 } }
						SOV_damage_relocated_civilian_factories_effect = yes
					}
					#SECOND FACTORY - Prio Civ
					if = {
						limit = {
							FROM = { has_state_flag = SOV_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_civs_removed_flag value = -1 } }
						SOV_damage_relocated_civilian_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = SOV_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_mils_removed_flag value = -1 } }
						SOV_damage_relocated_military_factories_effect = yes
					}
				}
			}
			else_if = { #A bunch of historical fallbacks
				limit = {
					any_controlled_state = {
						SOV_is_industrial_relocation_destiny_fallback_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
				}
				random_controlled_state = {
					limit = {
						SOV_is_industrial_relocation_destiny_fallback_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
					#FIRST FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = SOV_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_mils_removed_flag value = -1 } }
						SOV_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = SOV_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_civs_removed_flag value = -1 } }
						SOV_damage_relocated_civilian_factories_effect = yes
					}
					#SECOND FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = SOV_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_mils_removed_flag value = -1 } }
						SOV_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = SOV_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_civs_removed_flag value = -1 } }
						SOV_damage_relocated_civilian_factories_effect = yes
					}
				}
			}
			else_if = { #what the hell man? Your country is in flames you know?
				limit = {
					any_controlled_state = {
						SOV_is_industrial_relocation_destiny_state = no
						SOV_is_industrial_relocation_destiny_fallback_state = no
						is_on_continent = asia
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
				}
				random_controlled_state = {
					limit = {
						SOV_is_industrial_relocation_destiny_state = no
						SOV_is_industrial_relocation_destiny_fallback_state = no
						is_on_continent = asia
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
					#FIRST FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = SOV_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_mils_removed_flag value = -1 } }
						SOV_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = SOV_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_civs_removed_flag value = -1 } }
						SOV_damage_relocated_civilian_factories_effect = yes
					}
					#SECOND FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = SOV_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_mils_removed_flag value = -1 } }
						SOV_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = SOV_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = SOV_civs_removed_flag value = -1 } }
						SOV_damage_relocated_civilian_factories_effect = yes
					}
				}
			}
		}
	}
}

SOV_kill_trotsky_effect = { # Poor bwoy D: -> ROOT = SOV (or it doesn't work! :D)
	#log = "ROOT is [ROOT.GetName] // THIS is [THIS.GetName] // FROM is [FROM.GetName]" -> Everything is SOV but retire_character tooltip keeps saying "Retire char from [nothing]"
	set_global_flag = flag_trotsky_dead
	if = {
		limit = {
			has_idea = trotskyite_plot_nsb
		}
		swap_ideas = {
			remove_idea = trotskyite_plot_nsb
			add_idea = trotskyite_plot_purged
		}
	}
	set_variable = { SOV.SOV_paranoia_photo_trotsky = 11 }
	MEX = {
		if = {
			limit = {
				has_country_leader = {
					character = MEX_leon_trotsky
				}
			}
			retire_ideology_leader = communism 
		}
		#retire_character = MEX_leon_trotsky #Mexico did show Trotsky as an unavailable advisor after being killed

		#THIS BELOW IS WHAT IS SCRIPTED TO HAPPEN IF TROTSKY RETURNS TO THE USSR TO RULE THERE
		#if = {
		#	limit = {
		#		has_country_leader = { character = MEX_leon_trotsky }
		#	}
		#	add_country_leader_role = {
		#		character = MEX_hernan_laborde
		#		country_leader = {
		#			expire = "1965.1.1"
		#			ideology = leninism
		#			traits = {
		#				devoted_trotskyist
		#			}
		#		}
		#		promote_leader = yes
		#	}
		#}
	}
}


########    ###    ##    ## ##    ##    ########  ########  ######  ####  ######   ##    ## ######## ########
   ##      ## ##   ###   ## ##   ##     ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
   ##     ##   ##  ####  ## ##  ##      ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
   ##    ##     ## ## ## ## #####       ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
   ##    ######### ##  #### ##  ##      ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
   ##    ##     ## ##   ### ##   ##     ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
   ##    ##     ## ##    ## ##    ##    ########  ########  ######  ####  ######   ##    ## ######## ##     ##


 #######                                #
    #       ##    #    #  #    #       ##
    #      #  #   ##   #  #   #       # #
    #     #    #  # #  #  ####          #
    #     ######  #  # #  #  #          #
    #     #    #  #   ##  #   #         #
    #     #    #  #    #  #    #      #####

#Why do I do this to myself?! D:
SOV_upgrade_appropriate_tank_designer_1_effect = {
	#MOROZOV
	if = {
		limit = {
			has_idea = SOV_morozov_design_bureau
		}
		set_country_flag = SOV_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau
			add_idea = SOV_morozov_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_2
		}
		set_country_flag = SOV_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_2
			add_idea = SOV_morozov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_3
		}
		set_country_flag = SOV_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_3
			add_idea = SOV_morozov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_2_3
		}
		set_country_flag = SOV_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_2_3
			add_idea = SOV_morozov_design_bureau_final
		}
	}

	#ASTROV
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau
		}
		set_country_flag = SOV_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau
			add_idea = SOV_astrov_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_2
		}
		set_country_flag = SOV_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_2
			add_idea = SOV_astrov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_3
		}
		set_country_flag = SOV_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_3
			add_idea = SOV_astrov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_2_3
		}
		set_country_flag = SOV_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_2_3
			add_idea = SOV_astrov_design_bureau_final
		}
	}

	#OKMO
	else_if = {
		limit = {
			has_idea = SOV_okmo
		}
		set_country_flag = SOV_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = SOV_okmo
			add_idea = SOV_okmo_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_2
		}
		set_country_flag = SOV_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = SOV_okmo_2
			add_idea = SOV_okmo_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_3
		}
		set_country_flag = SOV_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = SOV_okmo_3
			add_idea = SOV_okmo_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_2_3
		}
		set_country_flag = SOV_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = SOV_okmo_2_3
			add_idea = SOV_okmo_final
		}
	}

	#mytishchy
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant
		}
		set_country_flag = SOV_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant
			add_idea = SOV_mytishchy_machine_building_plant_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_2
		}
		set_country_flag = SOV_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_2
			add_idea = SOV_mytishchy_machine_building_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_3
		}
		set_country_flag = SOV_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_3
			add_idea = SOV_mytishchy_machine_building_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_2_3
		}
		set_country_flag = SOV_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_2_3
			add_idea = SOV_mytishchy_machine_building_plant_final
		}
	}

	#KIROV
	else_if = {
		limit = {
			has_idea = SOV_kirov
		}
		set_country_flag = SOV_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = SOV_kirov
			add_idea = SOV_kirov_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_2
		}
		set_country_flag = SOV_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = SOV_kirov_2
			add_idea = SOV_kirov_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_3
		}
		set_country_flag = SOV_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = SOV_kirov_3
			add_idea = SOV_kirov_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_2_3
		}
		set_country_flag = SOV_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = SOV_kirov_2_3
			add_idea = SOV_kirov_final
		}
	}
}

 #######                               #####
    #       ##    #    #  #    #      #     #
    #      #  #   ##   #  #   #             #
    #     #    #  # #  #  ####         #####
    #     ######  #  # #  #  #        #
    #     #    #  #   ##  #   #       #
    #     #    #  #    #  #    #      #######


SOV_upgrade_appropriate_tank_designer_2_effect = {
	#MOROZOV
	if = {
		limit = {
			has_idea = SOV_morozov_design_bureau
		}
		set_country_flag = SOV_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau
			add_idea = SOV_morozov_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_1
		}
		set_country_flag = SOV_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_1
			add_idea = SOV_morozov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_3
		}
		set_country_flag = SOV_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_3
			add_idea = SOV_morozov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_1_3
		}
		set_country_flag = SOV_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_1_3
			add_idea = SOV_morozov_design_bureau_final
		}
	}

	#ASTROV
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau
		}
		set_country_flag = SOV_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau
			add_idea = SOV_astrov_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_1
		}
		set_country_flag = SOV_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_1
			add_idea = SOV_astrov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_3
		}
		set_country_flag = SOV_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_3
			add_idea = SOV_astrov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_1_3
		}
		set_country_flag = SOV_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_1_3
			add_idea = SOV_astrov_design_bureau_final
		}
	}

	#OKMO
	else_if = {
		limit = {
			has_idea = SOV_okmo
		}
		set_country_flag = SOV_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = SOV_okmo
			add_idea = SOV_okmo_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_1
		}
		set_country_flag = SOV_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = SOV_okmo_1
			add_idea = SOV_okmo_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_3
		}
		set_country_flag = SOV_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = SOV_okmo_3
			add_idea = SOV_okmo_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_1_3
		}
		set_country_flag = SOV_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = SOV_okmo_1_3
			add_idea = SOV_okmo_final
		}
	}

	#mytishchy
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant
		}
		set_country_flag = SOV_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant
			add_idea = SOV_mytishchy_machine_building_plant_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_1
		}
		set_country_flag = SOV_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_1
			add_idea = SOV_mytishchy_machine_building_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_3
		}
		set_country_flag = SOV_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_3
			add_idea = SOV_mytishchy_machine_building_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_1_3
		}
		set_country_flag = SOV_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_1_3
			add_idea = SOV_mytishchy_machine_building_plant_final
		}
	}

	#KIROV
	else_if = {
		limit = {
			has_idea = SOV_kirov
		}
		set_country_flag = SOV_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = SOV_kirov
			add_idea = SOV_kirov_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_1
		}
		set_country_flag = SOV_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = SOV_kirov_1
			add_idea = SOV_kirov_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_3
		}
		set_country_flag = SOV_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = SOV_kirov_3
			add_idea = SOV_kirov_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_1_3
		}
		set_country_flag = SOV_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = SOV_kirov_1_3
			add_idea = SOV_kirov_final
		}
	}
}

 #######                               #####
    #       ##    #    #  #    #      #     #
    #      #  #   ##   #  #   #             #
    #     #    #  # #  #  ####         #####
    #     ######  #  # #  #  #              #
    #     #    #  #   ##  #   #       #     #
    #     #    #  #    #  #    #       #####


SOV_upgrade_appropriate_tank_designer_3_effect = {
	#MOROZOV
	if = {
		limit = {
			has_idea = SOV_morozov_design_bureau
		}
		set_country_flag = SOV_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau
			add_idea = SOV_morozov_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_1
		}
		set_country_flag = SOV_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_1
			add_idea = SOV_morozov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_2
		}
		set_country_flag = SOV_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_2
			add_idea = SOV_morozov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_morozov_design_bureau_1_2
		}
		set_country_flag = SOV_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = SOV_morozov_design_bureau_1_2
			add_idea = SOV_morozov_design_bureau_final
		}
	}

	#ASTROV
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau
		}
		set_country_flag = SOV_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau
			add_idea = SOV_astrov_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_1
		}
		set_country_flag = SOV_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_1
			add_idea = SOV_astrov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_2
		}
		set_country_flag = SOV_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_2
			add_idea = SOV_astrov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_astrov_design_bureau_1_2
		}
		set_country_flag = SOV_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = SOV_astrov_design_bureau_1_2
			add_idea = SOV_astrov_design_bureau_final
		}
	}

	#OKMO
	else_if = {
		limit = {
			has_idea = SOV_okmo
		}
		set_country_flag = SOV_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = SOV_okmo
			add_idea = SOV_okmo_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_1
		}
		set_country_flag = SOV_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = SOV_okmo_1
			add_idea = SOV_okmo_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_2
		}
		set_country_flag = SOV_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = SOV_okmo_2
			add_idea = SOV_okmo_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_okmo_1_2
		}
		set_country_flag = SOV_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = SOV_okmo_1_2
			add_idea = SOV_okmo_final
		}
	}

	#mytishchy
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant
		}
		set_country_flag = SOV_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant
			add_idea = SOV_mytishchy_machine_building_plant_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_1
		}
		set_country_flag = SOV_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_1
			add_idea = SOV_mytishchy_machine_building_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_2
		}
		set_country_flag = SOV_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_2
			add_idea = SOV_mytishchy_machine_building_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mytishchy_machine_building_plant_1_2
		}
		set_country_flag = SOV_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = SOV_mytishchy_machine_building_plant_1_2
			add_idea = SOV_mytishchy_machine_building_plant_final
		}
	}

	#KIROV
	else_if = {
		limit = {
			has_idea = SOV_kirov
		}
		set_country_flag = SOV_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = SOV_kirov
			add_idea = SOV_kirov_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_1
		}
		set_country_flag = SOV_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = SOV_kirov_1
			add_idea = SOV_kirov_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_2
		}
		set_country_flag = SOV_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = SOV_kirov_2
			add_idea = SOV_kirov_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_kirov_1_2
		}
		set_country_flag = SOV_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = SOV_kirov_1_2
			add_idea = SOV_kirov_final
		}
	}
}


##    ##    ###    ##     ##    ###    ##          ########  ########  ######  ####  ######   ##    ## ######## ########
###   ##   ## ##   ##     ##   ## ##   ##          ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
####  ##  ##   ##  ##     ##  ##   ##  ##          ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
## ## ## ##     ## ##     ## ##     ## ##          ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
##  #### #########  ##   ##  ######### ##          ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
##   ### ##     ##   ## ##   ##     ## ##          ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
##    ## ##     ##    ###    ##     ## ########    ########  ########  ######  ####  ######   ##    ## ######## ##     ##

 #     #                                        #        ######
 ##    #    ##    #    #    ##    #            ##        #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #           # #        #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #             #        ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #             #        #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #             #        #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######      #####      ######   #    #  ######    #    #   ####


SOV_upgrade_appropriate_ship_designer_1_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau
			add_idea = SOV_nevskoye_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_2
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_2
			add_idea = SOV_nevskoye_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_3
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_3
			add_idea = SOV_nevskoye_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_4
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_4
			add_idea = SOV_nevskoye_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_2_4
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_2_4
			add_idea = SOV_nevskoye_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_3_4
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_3_4
			add_idea = SOV_nevskoye_design_bureau_final_3
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau
			add_idea = SOV_rubin_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_2
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_2
			add_idea = SOV_rubin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_3
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_3
			add_idea = SOV_rubin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_4
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_4
			add_idea = SOV_rubin_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_2_4
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_2_4
			add_idea = SOV_rubin_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_3_4
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_3_4
			add_idea = SOV_rubin_design_bureau_final_3
		}
	}
}

 #     #                                       #####       ######
 ##    #    ##    #    #    ##    #           #     #      #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #                 #      #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #           #            #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #           #            #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######      #######      ######   #    #  ######    #    #   ####


SOV_upgrade_appropriate_ship_designer_2_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau
			add_idea = SOV_nevskoye_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_1
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_1
			add_idea = SOV_nevskoye_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_4
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_4
			add_idea = SOV_nevskoye_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_1_4
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_1_4
			add_idea = SOV_nevskoye_design_bureau_final_2
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau
			add_idea = SOV_rubin_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_1
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_1
			add_idea = SOV_rubin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_4
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_4
			add_idea = SOV_rubin_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_1_4
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_1_4
			add_idea = SOV_rubin_design_bureau_final_2
		}
	}
}

 #     #                                       #####       ######
 ##    #    ##    #    #    ##    #           #     #      #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #                 #      #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #                 #      #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #           #     #      #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######       #####       ######   #    #  ######    #    #   ####

SOV_upgrade_appropriate_ship_designer_3_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau
			add_idea = SOV_nevskoye_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_1
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_1
			add_idea = SOV_nevskoye_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_4
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_4
			add_idea = SOV_nevskoye_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_1_4
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_1_4
			add_idea = SOV_nevskoye_design_bureau_final_3
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau
			add_idea = SOV_rubin_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_1
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_1
			add_idea = SOV_rubin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_4
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_4
			add_idea = SOV_rubin_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_1_4
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_1_4
			add_idea = SOV_rubin_design_bureau_final_3
		}
	}
}

 #     #                                      #            ######
 ##    #    ##    #    #    ##    #           #    #       #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #           #    #       #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #           #    #       ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #           #######      #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #                #       #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######           #       ######   #    #  ######    #    #   ####


SOV_upgrade_appropriate_ship_designer_4_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau
			add_idea = SOV_nevskoye_design_bureau_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_1
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_1
			add_idea = SOV_nevskoye_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_2
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_2
			add_idea = SOV_nevskoye_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_3
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_3
			add_idea = SOV_nevskoye_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_1_2
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_1_2
			add_idea = SOV_nevskoye_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_nevskoye_design_bureau_1_3
		}
		set_country_flag = SOV_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_nevskoye_design_bureau_1_3
			add_idea = SOV_nevskoye_design_bureau_final_3
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau
			add_idea = SOV_rubin_design_bureau_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_1
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_1
			add_idea = SOV_rubin_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_2
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_2
			add_idea = SOV_rubin_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_3
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_3
			add_idea = SOV_rubin_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_1_2
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_1_2
			add_idea = SOV_rubin_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_rubin_design_bureau_1_3
		}
		set_country_flag = SOV_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = SOV_rubin_design_bureau_1_3
			add_idea = SOV_rubin_design_bureau_final_3
		}
	}
}

 #     #                                        #        ######                                        #####
 ##    #    ##    #    #    ##    #            ##        #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #           # #        #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #             #        ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #             #        #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #             #        #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######      #####      ######   ######  #    #   ####   #    #       #####   ######  #    #


SOV_upgrade_appropriate_ship_designer_1_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = SOV_black_sea_shipyard
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard
			add_idea = SOV_black_sea_shipyard_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_2
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_2
			add_idea = SOV_black_sea_shipyard_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_3
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_3
			add_idea = SOV_black_sea_shipyard_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_4
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_4
			add_idea = SOV_black_sea_shipyard_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_2_4
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_2_4
			add_idea = SOV_black_sea_shipyard_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_3_4
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_3_4
			add_idea = SOV_black_sea_shipyard_final_3
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant
			add_idea = SOV_sevastopol_marine_plant_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_2
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_2
			add_idea = SOV_sevastopol_marine_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_3
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_3
			add_idea = SOV_sevastopol_marine_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_4
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_4
			add_idea = SOV_sevastopol_marine_plant_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_2_4
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_2_4
			add_idea = SOV_sevastopol_marine_plant_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_3_4
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_3_4
			add_idea = SOV_sevastopol_marine_plant_final_3
		}
	}
}

 #     #                                       #####       ######                                        #####
 ##    #    ##    #    #    ##    #           #     #      #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #                 #      #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #           #            #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #           #            #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######      #######      ######   ######  #    #   ####   #    #       #####   ######  #    #


SOV_upgrade_appropriate_ship_designer_2_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = SOV_black_sea_shipyard
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard
			add_idea = SOV_black_sea_shipyard_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_1
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_1
			add_idea = SOV_black_sea_shipyard_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_4
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_4
			add_idea = SOV_black_sea_shipyard_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_1_4
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_1_4
			add_idea = SOV_black_sea_shipyard_final_2
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant
			add_idea = SOV_sevastopol_marine_plant_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_1
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_1
			add_idea = SOV_sevastopol_marine_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_4
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_4
			add_idea = SOV_sevastopol_marine_plant_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_1_4
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_1_4
			add_idea = SOV_sevastopol_marine_plant_final_2
		}
	}
}

 #     #                                       #####       ######                                        #####
 ##    #    ##    #    #    ##    #           #     #      #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #                 #      #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #                 #      #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #           #     #      #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######       #####       ######   ######  #    #   ####   #    #       #####   ######  #    #


SOV_upgrade_appropriate_ship_designer_3_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = SOV_black_sea_shipyard
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard
			add_idea = SOV_black_sea_shipyard_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_1
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_1
			add_idea = SOV_black_sea_shipyard_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_4
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_4
			add_idea = SOV_black_sea_shipyard_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_1_4
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_1_4
			add_idea = SOV_black_sea_shipyard_final_3
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant
			add_idea = SOV_sevastopol_marine_plant_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_1
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_1
			add_idea = SOV_sevastopol_marine_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_4
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_4
			add_idea = SOV_sevastopol_marine_plant_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_1_4
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_1_4
			add_idea = SOV_sevastopol_marine_plant_final_3
		}
	}
}

 #     #                                      #            ######                                        #####
 ##    #    ##    #    #    ##    #           #    #       #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #           #    #       #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #           #    #       ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #           #######      #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #                #       #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######           #       ######   ######  #    #   ####   #    #       #####   ######  #    #


SOV_upgrade_appropriate_ship_designer_4_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = SOV_black_sea_shipyard
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard
			add_idea = SOV_black_sea_shipyard_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_1
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_1
			add_idea = SOV_black_sea_shipyard_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_2
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_2
			add_idea = SOV_black_sea_shipyard_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_3
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_3
			add_idea = SOV_black_sea_shipyard_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_1_2
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_1_2
			add_idea = SOV_black_sea_shipyard_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_black_sea_shipyard_1_3
		}
		set_country_flag = SOV_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = SOV_black_sea_shipyard_1_3
			add_idea = SOV_black_sea_shipyard_final_3
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant
			add_idea = SOV_sevastopol_marine_plant_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_1
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_1
			add_idea = SOV_sevastopol_marine_plant_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_2
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_2
			add_idea = SOV_sevastopol_marine_plant_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_3
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_3
			add_idea = SOV_sevastopol_marine_plant_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_1_2
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_1_2
			add_idea = SOV_sevastopol_marine_plant_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_sevastopol_marine_plant_1_3
		}
		set_country_flag = SOV_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = SOV_sevastopol_marine_plant_1_3
			add_idea = SOV_sevastopol_marine_plant_final_3
		}
	}
}


   ###    #### ########   ######  ########     ###    ######## ########    ########  ########  ######  ####  ######   ##    ## ######## ########
  ## ##    ##  ##     ## ##    ## ##     ##   ## ##   ##          ##       ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
 ##   ##   ##  ##     ## ##       ##     ##  ##   ##  ##          ##       ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
##     ##  ##  ########  ##       ########  ##     ## ######      ##       ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
#########  ##  ##   ##   ##       ##   ##   ######### ##          ##       ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
##     ##  ##  ##    ##  ##    ## ##    ##  ##     ## ##          ##       ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
##     ## #### ##     ##  ######  ##     ## ##     ## ##          ##       ########  ########  ######  ####  ######   ##    ## ######## ##     ##

    #                                                             #
   # #    #  #####    ####   #####     ##    ######  #####       ##
  #   #   #  #    #  #    #  #    #   #  #   #         #        # #
 #     #  #  #    #  #       #    #  #    #  #####     #          #
 #######  #  #####   #       #####   ######  #         #          #
 #     #  #  #   #   #    #  #   #   #    #  #         #          #
 #     #  #  #    #   ####   #    #  #    #  #         #        #####


SOV_upgrade_appropriate_aircraft_designer_1_effect = {
	#MIG
	if = {
		limit = {
			has_idea = SOV_mig_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau
			add_idea = SOV_mig_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_2
			add_idea = SOV_mig_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_3
			add_idea = SOV_mig_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_2_3
		}
		set_country_flag = SOV_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_2_3
			add_idea = SOV_mig_design_bureau_final
		}
	}

	#ILYUSHIN
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau
			add_idea = SOV_ilyushin_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_2
			add_idea = SOV_ilyushin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_3
			add_idea = SOV_ilyushin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_2_3
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_2_3
			add_idea = SOV_ilyushin_design_bureau_final
		}
	}

	#TUPOLEV
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau
			add_idea = SOV_tupolev_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_2
			add_idea = SOV_tupolev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_3
			add_idea = SOV_tupolev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_2_3
		}
		set_country_flag = SOV_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_2_3
			add_idea = SOV_tupolev_design_bureau_final
		}
	}

	#YAKOVLEV
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau
			add_idea = SOV_yakovlev_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_2
			add_idea = SOV_yakovlev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_3
			add_idea = SOV_yakovlev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_2_3
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_2_3
			add_idea = SOV_yakovlev_design_bureau_final
		}
	}
}

    #                                                            #####
   # #    #  #####    ####   #####     ##    ######  #####      #     #
  #   #   #  #    #  #    #  #    #   #  #   #         #              #
 #     #  #  #    #  #       #    #  #    #  #####     #         #####
 #######  #  #####   #       #####   ######  #         #        #
 #     #  #  #   #   #    #  #   #   #    #  #         #        #
 #     #  #  #    #   ####   #    #  #    #  #         #        #######


SOV_upgrade_appropriate_aircraft_designer_2_effect = {
	#MIG
	if = {
		limit = {
			has_idea = SOV_mig_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau
			add_idea = SOV_mig_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_1
			add_idea = SOV_mig_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_3
			add_idea = SOV_mig_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_1_3
		}
		set_country_flag = SOV_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_1_3
			add_idea = SOV_mig_design_bureau_final
		}
	}

	#ILYUSHIN
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau
			add_idea = SOV_ilyushin_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_1
			add_idea = SOV_ilyushin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_3
			add_idea = SOV_ilyushin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_1_3
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_1_3
			add_idea = SOV_ilyushin_design_bureau_final
		}
	}

	#TUPOLEV
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau
			add_idea = SOV_tupolev_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_1
			add_idea = SOV_tupolev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_3
			add_idea = SOV_tupolev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_1_3
		}
		set_country_flag = SOV_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_1_3
			add_idea = SOV_tupolev_design_bureau_final
		}
	}

	#YAKOVLEV
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau
			add_idea = SOV_yakovlev_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_1
			add_idea = SOV_yakovlev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_3
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_3
			add_idea = SOV_yakovlev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_1_3
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_1_3
			add_idea = SOV_yakovlev_design_bureau_final
		}
	}
}

    #                                                            #####
   # #    #  #####    ####   #####     ##    ######  #####      #     #
  #   #   #  #    #  #    #  #    #   #  #   #         #              #
 #     #  #  #    #  #       #    #  #    #  #####     #         #####
 #######  #  #####   #       #####   ######  #         #              #
 #     #  #  #   #   #    #  #   #   #    #  #         #        #     #
 #     #  #  #    #   ####   #    #  #    #  #         #         #####


SOV_upgrade_appropriate_aircraft_designer_3_effect = {
	#MIG
	if = {
		limit = {
			has_idea = SOV_mig_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau
			add_idea = SOV_mig_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_1
			add_idea = SOV_mig_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_2
			add_idea = SOV_mig_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_mig_design_bureau_1_2
		}
		set_country_flag = SOV_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = SOV_mig_design_bureau_1_2
			add_idea = SOV_mig_design_bureau_final
		}
	}

	#ILYUSHIN
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau
			add_idea = SOV_ilyushin_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_1
			add_idea = SOV_ilyushin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_2
			add_idea = SOV_ilyushin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_ilyushin_design_bureau_1_2
		}
		set_country_flag = SOV_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = SOV_ilyushin_design_bureau_1_2
			add_idea = SOV_ilyushin_design_bureau_final
		}
	}

	#TUPOLEV
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau
			add_idea = SOV_tupolev_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_1
			add_idea = SOV_tupolev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_2
			add_idea = SOV_tupolev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tupolev_design_bureau_1_2
		}
		set_country_flag = SOV_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = SOV_tupolev_design_bureau_1_2
			add_idea = SOV_tupolev_design_bureau_final
		}
	}

	#YAKOVLEV
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau
			add_idea = SOV_yakovlev_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_1
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_1
			add_idea = SOV_yakovlev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_2
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_2
			add_idea = SOV_yakovlev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_yakovlev_design_bureau_1_2
		}
		set_country_flag = SOV_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = SOV_yakovlev_design_bureau_1_2
			add_idea = SOV_yakovlev_design_bureau_final
		}
	}
}


##     ##    ###    ######## ######## ########  #### ######## ##          ########  ########  ######  ####  ######   ##    ## ######## ########
###   ###   ## ##      ##    ##       ##     ##  ##  ##       ##          ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
#### ####  ##   ##     ##    ##       ##     ##  ##  ##       ##          ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
## ### ## ##     ##    ##    ######   ########   ##  ######   ##          ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
##     ## #########    ##    ##       ##   ##    ##  ##       ##          ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
##     ## ##     ##    ##    ##       ##    ##   ##  ##       ##          ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
##     ## ##     ##    ##    ######## ##     ## #### ######## ########    ########  ########  ######  ####  ######   ##    ## ######## ##     ##

 #     #                                                          #
 ##   ##    ##    #####  ######  #####   #  ######  #            ##
 # # # #   #  #     #    #       #    #  #  #       #           # #
 #  #  #  #    #    #    #####   #    #  #  #####   #             #
 #     #  ######    #    #       #####   #  #       #             #
 #     #  #    #    #    #       #   #   #  #       #             #
 #     #  #    #    #    ######  #    #  #  ######  ######      #####

SOV_upgrade_appropriate_materiel_designer_1_artillery_effect = {
	#GRABIN
	if = {
		limit = {
			has_idea = SOV_grabin_design_bureau
		}
		set_country_flag = SOV_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau
			add_idea = SOV_grabin_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_2
		}
		set_country_flag = SOV_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_2
			add_idea = SOV_grabin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_3
		}
		set_country_flag = SOV_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_3
			add_idea = SOV_grabin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_2_3
		}
		set_country_flag = SOV_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_2_3
			add_idea = SOV_grabin_design_bureau_final
		}
	}
}

SOV_upgrade_appropriate_materiel_designer_1_infantry_effect = {
	#TULA
	if = {
		limit = {
			has_idea = SOV_tula_arms_plant
		}
		set_country_flag = SOV_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant
			add_idea = SOV_tula_arms_plant_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_2
		}
		set_country_flag = SOV_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_2
			add_idea = SOV_tula_arms_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_3
		}
		set_country_flag = SOV_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_3
			add_idea = SOV_tula_arms_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_2_3
		}
		set_country_flag = SOV_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_2_3
			add_idea = SOV_tula_arms_plant_final
		}
	}
}

SOV_upgrade_appropriate_materiel_designer_1_motorized_effect = {
	#GAZ
	if = {
		limit = {
			has_idea = SOV_gaz
		}
		set_country_flag = SOV_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = SOV_gaz
			add_idea = SOV_gaz_1
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_2
		}
		set_country_flag = SOV_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = SOV_gaz_2
			add_idea = SOV_gaz_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_3
		}
		set_country_flag = SOV_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = SOV_gaz_3
			add_idea = SOV_gaz_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_2_3
		}
		set_country_flag = SOV_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = SOV_gaz_2_3
			add_idea = SOV_gaz_final
		}
	}
}

 #     #                                                         #####
 ##   ##    ##    #####  ######  #####   #  ######  #           #     #
 # # # #   #  #     #    #       #    #  #  #       #                 #
 #  #  #  #    #    #    #####   #    #  #  #####   #            #####
 #     #  ######    #    #       #####   #  #       #           #
 #     #  #    #    #    #       #   #   #  #       #           #
 #     #  #    #    #    ######  #    #  #  ######  ######      #######


SOV_upgrade_appropriate_materiel_designer_2_effect = {
	#GRABIN
	if = {
		limit = {
			has_idea = SOV_grabin_design_bureau
		}
		set_country_flag = SOV_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau
			add_idea = SOV_grabin_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_1
		}
		set_country_flag = SOV_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_1
			add_idea = SOV_grabin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_3
		}
		set_country_flag = SOV_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_3
			add_idea = SOV_grabin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_1_3
		}
		set_country_flag = SOV_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_1_3
			add_idea = SOV_grabin_design_bureau_final
		}
	}

	#TULA
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant
		}
		set_country_flag = SOV_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant
			add_idea = SOV_tula_arms_plant_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_1
		}
		set_country_flag = SOV_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_1
			add_idea = SOV_tula_arms_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_3
		}
		set_country_flag = SOV_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_3
			add_idea = SOV_tula_arms_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_1_3
		}
		set_country_flag = SOV_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_1_3
			add_idea = SOV_tula_arms_plant_final
		}
	}

	#GAZ
	else_if = {
		limit = {
			has_idea = SOV_gaz
		}
		set_country_flag = SOV_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = SOV_gaz
			add_idea = SOV_gaz_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_1
		}
		set_country_flag = SOV_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = SOV_gaz_1
			add_idea = SOV_gaz_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_3
		}
		set_country_flag = SOV_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = SOV_gaz_3
			add_idea = SOV_gaz_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_1_3
		}
		set_country_flag = SOV_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = SOV_gaz_1_3
			add_idea = SOV_gaz_final
		}
	}
}

 #     #                                                         #####
 ##   ##    ##    #####  ######  #####   #  ######  #           #     #
 # # # #   #  #     #    #       #    #  #  #       #                 #
 #  #  #  #    #    #    #####   #    #  #  #####   #            #####
 #     #  ######    #    #       #####   #  #       #                 #
 #     #  #    #    #    #       #   #   #  #       #           #     #
 #     #  #    #    #    ######  #    #  #  ######  ######       #####

SOV_upgrade_appropriate_materiel_designer_3_effect = {
	#GRABIN
	if = {
		limit = {
			has_idea = SOV_grabin_design_bureau
		}
		set_country_flag = SOV_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau
			add_idea = SOV_grabin_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_1
		}
		set_country_flag = SOV_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_1
			add_idea = SOV_grabin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_2
		}
		set_country_flag = SOV_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_2
			add_idea = SOV_grabin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_grabin_design_bureau_1_2
		}
		set_country_flag = SOV_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = SOV_grabin_design_bureau_1_2
			add_idea = SOV_grabin_design_bureau_final
		}
	}

	#TULA
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant
		}
		set_country_flag = SOV_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant
			add_idea = SOV_tula_arms_plant_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_1
		}
		set_country_flag = SOV_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_1
			add_idea = SOV_tula_arms_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_2
		}
		set_country_flag = SOV_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_2
			add_idea = SOV_tula_arms_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_tula_arms_plant_1_2
		}
		set_country_flag = SOV_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = SOV_tula_arms_plant_1_2
			add_idea = SOV_tula_arms_plant_final
		}
	}

	#GAZ
	else_if = {
		limit = {
			has_idea = SOV_gaz
		}
		set_country_flag = SOV_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = SOV_gaz
			add_idea = SOV_gaz_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_1
		}
		set_country_flag = SOV_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = SOV_gaz_1
			add_idea = SOV_gaz_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_2
		}
		set_country_flag = SOV_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = SOV_gaz_2
			add_idea = SOV_gaz_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = SOV_gaz_1_2
		}
		set_country_flag = SOV_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = SOV_gaz_1_2
			add_idea = SOV_gaz_final
		}
	}
}

 ## #   #  ##  ###       ##  #  # #  # ###   ##  #  #      ## ###  ### ###  ### ###  ##
#   #   # #  # #  #     #  # #  # #  # #  # #  # #  #     #   #  #  #  #  #  #   #  #
 #  # # # #### ###      #    #### #  # ###  #    ####      #  ###   #  ###   #   #   #
  # # # # #  # #        #  # #  # #  # #  # #  # #  #       # #     #  #  #  #   #    #
##   # #  #  # #         ##  #  #  ##  #  #  ##  #  #     ##  #    ### #  # ###  #  ##



SOV_get_centre_military_support = {
	IF = {
		limit = { SOV_is_left_opposition = yes }
		set_variable = { SOV.SOV_centre_army_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_army_support = SOV.SOV_left_opposition_army_support }
		set_variable = { SOV.SOV_centre_navy_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_navy_support = SOV.SOV_left_opposition_navy_support }
		set_variable = { SOV.SOV_centre_air_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_air_support = SOV.SOV_left_opposition_air_support }
	}
	ELSE_IF = {
		limit = { SOV_is_right_opposition = yes }
		set_variable = { SOV.SOV_centre_army_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_army_support = SOV.SOV_right_opposition_army_support }
		set_variable = { SOV.SOV_centre_navy_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_navy_support = SOV.SOV_right_opposition_navy_support }
		set_variable = { SOV.SOV_centre_air_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_air_support = SOV.SOV_right_opposition_air_support }
	}
	ELSE_IF = {
		limit = { SOV_is_exiles = yes }
		set_variable = { SOV.SOV_centre_army_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_army_support = SOV.SOV_exiles_army_support }
		set_variable = { SOV.SOV_centre_navy_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_navy_support = SOV.SOV_exiles_navy_support }
		set_variable = { SOV.SOV_centre_air_support = 1 }
		subtract_from_variable = { SOV.SOV_centre_air_support = SOV.SOV_exiles_air_support }
	}

}

SOV_increase_opposition_army_support = {
	custom_effect_tooltip = SOV_increase_opposition_army_support_tt
	IF = {
		limit = { SOV_is_left_opposition = yes }
		add_to_variable = { SOV.SOV_left_opposition_army_support = 0.1 }
		clamp_variable = {
			var= SOV.SOV_left_opposition_army_support
			max = 0.9
			min = 0.1
		}
	}
	ELSE_IF = {
		limit = { SOV_is_right_opposition = yes }
		add_to_variable = { SOV.SOV_right_opposition_army_support = 0.1 }
		clamp_variable = {
			var= SOV.SOV_right_opposition_army_support
			max = 0.9
			min = 0.1
		}
	}
	ELSE_IF = {
		limit = { SOV_is_exiles = yes }
		add_to_variable = { SOV.SOV_exiles_army_support = 0.1 }
		clamp_variable = {
			var = SOV.SOV_exiles_army_support
			max = 0.9
			min = 0.1
		}
	}
	SOV_get_centre_military_support = yes 
}
SOV_increase_opposition_army_support_small = {
	IF = {
		limit = {
			SOV_is_opposition = yes 
		}
		custom_effect_tooltip = SOV_increase_opposition_army_support_small_tt
		hidden_effect = {
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_army_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_army_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_army_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_army_support = 0.05 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_army_support = 0.05 }
						clamp_variable = {
							var = SOV.SOV_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_army_support = 0.05 }
						clamp_variable = {
							var = SOV.SOV_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
		}
	}
	SOV_get_centre_military_support = yes 
}

SOV_increase_opposition_navy_support_small = {
	IF = {
		limit = {
			SOV_is_opposition = yes 
		}
		custom_effect_tooltip = SOV_increase_opposition_navy_support_small_tt
		hidden_effect = {
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_navy_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_navy_support = 0.05 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_navy_support = 0.05 }
						clamp_variable = {
							var = SOV.SOV_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_navy_support = 0.05 }
						clamp_variable = {
							var = SOV.SOV_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
		}
	}
	SOV_get_centre_military_support = yes 
}

SOV_add_armed_forces_support_state = {
	IF = {
		limit = {
			SOV_is_opposition = yes 
		}
		custom_effect_tooltip = SOV_add_armed_forces_support_state_tt
		hidden_effect = {
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_army_support = 0.01 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_army_support = 0.01}
						clamp_variable = {
							var = SOV.SOV_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_army_support = 0.01 }
						clamp_variable = {
							var = SOV.SOV_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_army_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_army_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_army_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_navy_support = 0.01 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_navy_support = 0.01}
						clamp_variable = {
							var = SOV.SOV_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_navy_support = 0.01 }
						clamp_variable = {
							var = SOV.SOV_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_navy_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_air_support = 0.01 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_air_support = 0.01}
						clamp_variable = {
							var = SOV.SOV_right_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_air_support = 0.01 }
						clamp_variable = {
							var = SOV.SOV_exiles_air_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { SOV_is_left_opposition = yes }
						add_to_variable = { SOV.SOV_left_opposition_air_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_left_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_right_opposition = yes }
						add_to_variable = { SOV.SOV_right_opposition_air_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_right_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { SOV_is_exiles = yes }
						add_to_variable = { SOV.SOV_exiles_air_support = 0.02 }
						clamp_variable = {
							var = SOV.SOV_exiles_air_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
			SOV_get_centre_military_support = yes 
		}

	}
	
}

SOV_decrease_all_opposition_army = {
	custom_effect_tooltip = SOV_decrease_all_opposition_army_tt
	subtract_from_variable = { SOV.SOV_left_opposition_army_support = 0.02 }
	subtract_from_variable = { SOV.SOV_right_opposition_army_support = 0.02 }
	subtract_from_variable = { SOV.SOV_exiles_army_support = 0.02 }
	clamp_variable = {
		var = SOV.SOV_left_opposition_army_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = SOV.SOV_right_opposition_army_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = SOV.SOV_exiles_army_support
		max = 0.9
		min = 0.1
	}
	SOV_get_centre_military_support = yes 
}
SOV_decrease_all_opposition_navy = {
	custom_effect_tooltip = SOV_decrease_all_opposition_navy_tt
	subtract_from_variable = { SOV.SOV_left_opposition_navy_support = 0.02 }
	subtract_from_variable = { SOV.SOV_right_opposition_navy_support = 0.02 }
	subtract_from_variable = { SOV.SOV_exiles_navy_support = 0.02 }
	clamp_variable = {
		var = SOV.SOV_left_opposition_navy_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = SOV.SOV_right_opposition_navy_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = SOV.SOV_exiles_navy_support
		max = 0.9
		min = 0.1
	}
	SOV_get_centre_military_support = yes 
}
SOV_decrease_all_opposition_air = {
	custom_effect_tooltip = SOV_decrease_all_opposition_air_tt
	subtract_from_variable = { SOV.SOV_left_opposition_air_support = 0.02 }
	subtract_from_variable = { SOV.SOV_right_opposition_air_support = 0.02 }
	subtract_from_variable = { SOV.SOV_exiles_air_support = 0.02 }
	clamp_variable = {
		var = SOV.SOV_left_opposition_air_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = SOV.SOV_right_opposition_air_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = SOV.SOV_exiles_air_support
		max = 0.9
		min = 0.1
	}
	SOV_get_centre_military_support = yes 
}

####### Change stuff based on ideology #######

SOV_replace_stuff_based_on_ideology_effect = {
	### FIVE YEAR PLANS
	if = {
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_third_five_year_plan_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_third_five_year_plan_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_third_five_year_plan_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_third_five_year_plan_civilian_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_third_five_year_plan_civilian_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_third_five_year_plan_civilian_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_third_five_year_plan_military_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_third_five_year_plan_military_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_third_five_year_plan_military_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_fourth_five_year_plan_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_fourth_five_year_plan_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_fourth_five_year_plan_dynamic_modifier_alt }
		}
	}
	else = {
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_third_five_year_plan_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_third_five_year_plan_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_third_five_year_plan_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_third_five_year_plan_civilian_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_third_five_year_plan_civilian_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_third_five_year_plan_civilian_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_third_five_year_plan_military_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_third_five_year_plan_military_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_third_five_year_plan_military_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_fourth_five_year_plan_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_fourth_five_year_plan_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_fourth_five_year_plan_dynamic_modifier }
		}
	}

	### USSR ACADEMIES OF SCIENCES
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_ussr_academy_of_sciences_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_ussr_academy_of_sciences_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_ussr_academy_of_sciences_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_ussr_academy_of_sciences_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_ussr_academy_of_sciences_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_ussr_academy_of_sciences_dynamic_modifier }
		}
	}

	### SOVIET AIRFORCE
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_soviet_airforce_aircraft_production_focus_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_soviet_airforce_aircraft_production_focus_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_soviet_airforce_aircraft_production_focus_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_soviet_airforce_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_soviet_airforce_aircraft_production_focus_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_soviet_airforce_aircraft_production_focus_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_soviet_airforce_aircraft_production_focus_dynamic_modifier }
		}
	}

	### THE RED FLEET
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_1_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_1_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_1_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_2_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_2_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_2_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_1_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_1_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_1_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_2_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_2_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_2_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_1_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_1_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_1_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_2_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_2_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_surface_2_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_1_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_1_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_1_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_2_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_2_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_the_red_fleet_submarine_2_dynamic_modifier }
		}
	}

	### THE RED ARMY
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
			add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = SOV_the_red_army_dynamic_modifier }
		}
	}
}