scripted_gui = {
	tool_open = {
		context_type = player_context
		window_name = "hosttool_open_container"
		visible = {has_country_flag = host}
		effects = {
			tool_open_click = {
				if = {
					limit = { ROOT = { NOT = { has_country_flag = hosttool_enabled } } }
					ROOT = { set_country_flag = hosttool_enabled }
				}
				else = {
					ROOT = { clr_country_flag = hosttool_enabled }
				}
			}
		}
		triggers = {tool_open_click_enabled = {always = yes}}
	}
	
	hosttool_container = {
		context_type = selected_state_context	
		window_name = "hosttool_container"	
		visible = {
			ROOT = {
				has_country_flag = host
				has_country_flag = hosttool_enabled
			}
		}
		
##########################################################################

		effects = {

			cheat1_click = {
				if = {
					limit={ ROOT = { has_country_flag = cheating } }
					set_variable={ ROOT.selected_cheat=1 }
					ROOT={ clr_country_flag=cheating }
				}
				else={ ROOT={ set_country_flag=cheating } }
			}
			cheat2_click={
				set_variable={Root.selected_cheat=2}
				ROOT={clr_country_flag=cheating}
			}
			cheat3_click={
				set_variable={Root.selected_cheat=3}
				ROOT={clr_country_flag=cheating}
			}
			cheat4_click={
				set_variable={Root.selected_cheat=4}
				ROOT={clr_country_flag=cheating}
			}

			add_cheat_click = {
				set_variable = { ROOT.taker = this}
				var:taker = {
					owner={
						set_variable={Root.target_country = this}
						if={limit={check_variable={Root.selected_cheat=1}} generic_bonus_1 = yes }
						if={limit={check_variable={Root.selected_cheat=2}} generic_bonus_3 = yes }
						if={limit={check_variable={Root.selected_cheat=3}} generic_bonus_2y = yes }
						if={limit={check_variable={Root.selected_cheat=4}} generic_bonus_999 = yes }
					}
				}
				GER={
					set_variable={this.target_country=Root.target_country}
					set_variable={this.selected_cheat=Root.selected_cheat}
					news_event={id=hosttool.1}
				}
				clear_variable = ROOT.taker
			}
			

			observer_click = {
				owner = {
					set_temp_variable = { ROOT.marks = this }
					NEU = { change_tag_from = var:marks }
				}	
			}
			whitepeace_click = {
				owner = {
					set_temp_variable = { ROOT.marks = this }
					var:marks = {
						declare_war_on = { target = VEN type = annex_everything }
						every_enemy_country = { white_peace = PREV }
					}
				}
			}
			
			
			addpp_click = {
				owner = {
					set_temp_variable = { ROOT.marks = this }
					var:marks = {
						add_political_power = 50
						news_event = { id = hosttool.4 }
					}
				}
			}
			mill_add_click = {
				owner = {
					news_event = { id = hosttool.2 days = 0}
					add_offsite_building = { type = arms_factory level = 1 }
				}
			}
			civ_add_click = {
				owner = {
					news_event = { id = hosttool.3 days = 0}
					add_offsite_building = { type = industrial_complex level = 1 }
				}
			}
			xp_add_army_click = {
				owner = {
					set_temp_variable = { ROOT.marks = this }
					var:marks = {
						army_experience = 50
						news_event = { id = hosttool.5 }
					}
				}
			}
			xp_add_air_click = {
				owner = {
					set_temp_variable = { ROOT.marks = this }
					var:marks = {
						air_experience = 50
						news_event = { id = hosttool.6 }
					}
				}
			}
			pingtool_click = {
				every_state = {
					limit = { non_damaged_building_level  = { building = anti_air_building  level > 5 } }
					remove_building  = { type = anti_air_building level = 1 }
				}
				every_state = {
					limit = { non_damaged_building_level = { building = infrastructure  level > 5 } }
					remove_building  = { type = infrastructure level = 1 }
				}
			}
			hosttool_helpbutton_click = {
				ROOT = { country_event = { id = hosttool.69 } }
			}
			
################################################################################
		
			clear_all_markings_click = {
				ROOT = {
					for_each_scope_loop={
						array=marked_states
						clear_variable=mark_status
					}
					clear_array=marked_states
				}
			}
			
			add_cores_click = {
				owner={
					set_temp_variable = { ROOT.taker = this}
					for_each_loop={
						array=ROOT.marked_states
						value=state
						var:state={add_core_of=var:taker}
					}
					ROOT = {
						for_each_scope_loop={
							array=marked_states
							clear_variable=mark_status
						}
						clear_array=marked_states
						clear_variable=first_marked_state
					}
				}
			}

			award_states_click = {
				owner={
					for_each_loop={
						array=ROOT.marked_states
						value=state
						transfer_state = state
					}
					for_each_loop={
						array=ROOT.marked_states
						value=state
						var:state={add_core_of=var:taker set_compliance = ROOT.host_comp}
					}
					ROOT = {
						for_each_scope_loop={
							array=marked_states
							clear_variable=mark_status
						}
						clear_array=marked_states
					}
				}
			}
			
		
			annex_country_click = {
				owner={ set_variable = { ROOT.taker = this}}
				var:ROOT.marked_states^0={owner={set_variable={ROOT.target=this}}}
				if={
					limit={
						check_variable={ROOT.target=ROOT.taker}
					}
				}
				else={
					var:ROOT.target={
						var:ROOT.taker={
							annex_country={	target=PREV transfer_troops=yes	}
							every_state = { 
								limit = { 
									is_core_of = var:ROOT.target
									is_controlled_by = var:ROOT.taker
								} 
								set_compliance = ROOT.host_comp
							}
							every_state = { 
								limit = { 
									is_core_of = var:ROOT.target
									is_controlled_by = var:ROOT.taker
									compliance > 99
								} 
								add_core_of = var:ROOT.taker
								remove_core_of = var:ROOT.target
							}
						}
					}
				}
					
				ROOT = {
					for_each_scope_loop={
						array=marked_states
						clear_variable=mark_status
					}
					clear_array=marked_states
					clear_variable=target
					clear_variable=taker
					clear_variable=first_marked_state
				}
			}

			toogle_mark_click = {
				if={
					limit={check_variable={mark_status=0}}
					set_variable={mark_status=2}
					add_to_array={ROOT.marked_states=THIS}
				}
				else={
					clear_variable=mark_status
					remove_from_array={ROOT.marked_states=THIS}
				}
				set_variable={ROOT.first_marked_state=ROOT.marked_states^0}
			}

			compliance_minus_click = { add_to_variable = { ROOT.host_comp = -5 } }
			compliance_plus_click = { add_to_variable = { ROOT.host_comp = 5 } }

			compliance_set_one_click = {
				set_compliance = ROOT.host_comp				
			}
			compliance_set_all_states_click = {
				owner={
					for_each_loop={
						array=ROOT.marked_states
						value=state
						var:state={set_compliance=ROOT.host_comp}
					}
				}
			}

####################################################################################

			prod_reset_click = {
				set_variable = { ROOT.prod_effi = 30 }
				set_variable = { ROOT.prod_type = 0 }
				set_variable = { ROOT.host_comp = 70 }
				
			}
			prod_effi_minus_click = { add_to_variable = { ROOT.prod_effi = -10 } }
			prod_effi_plus_click = { add_to_variable = { ROOT.prod_effi = 10 } }
			prod_type_minus_click = { add_to_variable = { ROOT.prod_type = -1 } }
			prod_type_plus_click = { add_to_variable = { ROOT.prod_type = 1 } }
			prod_create_click = {
				owner = {
					news_event = { id = hosttool.7 }
					meta_effect = {
						text = {
							add_equipment_production = {
								equipment = {
									type = [PROD_TYPEE]
								}
								efficiency = [PROD_EFFI]
								requested_factories = 150
								progress = 0.1
								amount = 1
							}
						}
						PROD_TYPEE = "[ROOT.prod_type]"
						PROD_EFFI = ROOT.prod_effi
					}
				}
			}
			prod_create_variant_click = {
				owner = {
					news_event = { id = hosttool.7 }
					meta_effect = {
						text = {
							add_equipment_production = {
								equipment = {
									type = [PROD_TYPEE]
									version_name = "prodfix"
								}
								efficiency = [PROD_EFFI]
								requested_factories = 150
								progress = 0.1
								amount = 1
							}
						}
						PROD_TYPEE = "[ROOT.prod_type]"
						PROD_EFFI = ROOT.prod_effi
					}
				}
			}


		}
		properties = {
			toogle_mark={ frame = mark_status }
		}
		
		triggers = {
			observer_click_enabled = { owner = { is_ai=no } }

			add_cheat_click_enabled = {check_variable={Root.selected_cheat>0}}

			cheat1_visible={}
			cheat2_visible={ROOT={has_country_flag=cheating}}
			cheat3_visible={ROOT={has_country_flag=cheating}}
			cheat4_visible={ROOT={has_country_flag=cheating}}

			cheat1_text_visible={}
			cheat2_text_visible={ROOT={has_country_flag=cheating}}
			cheat3_text_visible={ROOT={has_country_flag=cheating}}
			cheat4_text_visible={ROOT={has_country_flag=cheating}}

			annex_country_click_enabled = {	check_variable = { ROOT.marked_states^num > 0 }	}
			award_states_click_enabled = {	check_variable = { ROOT.marked_states^num > 0 }	}
			clear_all_markings_click_enabled = { check_variable = { ROOT.marked_states^num > 0 } }	
			add_cores_click_enabled = { check_variable = { ROOT.marked_states^num > 0 }	}
			compliance_minus_click_enabled = { check_variable = { ROOT.host_comp > 0 } }
			compliance_plus_click_enabled = { check_variable = { ROOT.host_comp < 100 } }

			prod_effi_minus_click_enabled = { check_variable = { ROOT.prod_effi > 10 } }
			prod_effi_plus_click_enabled = { check_variable = { ROOT.prod_effi < 130 } }
			prod_type_minus_click_enabled = { check_variable = { ROOT.prod_type > 0 } }
			prod_type_plus_click_enabled = { check_variable = { ROOT.prod_type < 47 } }

			prod_create_click_enabled = {
				check_variable = { ROOT.prod_effi > 0 }
				check_variable = { ROOT.prod_effi < 140 }
				check_variable = { ROOT.prod_type > -1 }
				check_variable = { ROOT.prod_type < 48 }
			}
		}
	}
}